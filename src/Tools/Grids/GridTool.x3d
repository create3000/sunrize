<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE X3D PUBLIC "ISO//Web3D//DTD X3D 4.0//EN" "http://www.web3d.org/specifications/x3d-4.0.dtd">
<X3D profile='Interchange' version='4.0' xmlns:xsd='http://www.w3.org/2001/XMLSchema-instance' xsd:noNamespaceSchemaLocation='http://www.web3d.org/specifications/x3d-4.0.xsd'>
  <head>
    <component name='Layout' level='2'/>
    <component name='PointingDeviceSensor' level='1'/>
    <component name='Scripting' level='1'/>
    <meta name='comment' content='Rise and Shine'/>
    <meta name='created' content='Tue, 05 Aug 2014 20:06:52 GMT'/>
    <meta name='creator' content='Holger Seelig'/>
    <meta name='generator' content='Sunrize X3D Editor V1.5.2, https://create3000.github.io/sunrize/'/>
    <meta name='identifier' content='file:///home/holger/Projekte/Titania/libtitania-x3d/share/titania/tools/GridTool.x3dv'/>
    <meta name='modified' content='Tue, 20 Feb 2024 05:21:36 GMT'/>
  </head>
  <Scene>
    <ExternProtoDeclare name='Grid' url='"Grid.x3d"'>
      <field accessType='inputOutput' type='SFVec3f' name='translation'/>
      <field accessType='inputOutput' type='SFRotation' name='rotation'/>
      <field accessType='inputOutput' type='SFVec3f' name='scale'/>
      <field accessType='inputOutput' type='MFInt32' name='dimension'/>
      <field accessType='inputOutput' type='MFInt32' name='majorLineEvery'/>
      <field accessType='inputOutput' type='MFInt32' name='majorLineOffset'/>
      <field accessType='inputOutput' type='SFColor' name='color'/>
      <field accessType='inputOutput' type='SFFloat' name='transparency'/>
      <field accessType='inputOutput' type='SFColor' name='lineColor'/>
      <field accessType='inputOutput' type='SFFloat' name='lineTransparency'/>
      <field accessType='inputOutput' type='SFColor' name='majorLineColor'/>
      <field accessType='inputOutput' type='SFFloat' name='majorLineTransparency'/>
      <field accessType='initializeOnly' type='SFBool' name='solid'/>
    </ExternProtoDeclare>
    <ExternProtoDeclare name='ToolShader' url='"../Shaders/ToolShader.x3d"'>
    </ExternProtoDeclare>
    <ProtoDeclare name='TouchGroup'>
      <ProtoInterface>
        <field accessType='inputOutput' type='SFBool' name='enabled' value='true'/>
        <field accessType='initializeOnly' type='SFVec3f' name='bboxSize' value='-1 -1 -1'/>
        <field accessType='initializeOnly' type='SFVec3f' name='bboxCenter'/>
        <field accessType='inputOnly' type='MFNode' name='addChildren'/>
        <field accessType='inputOnly' type='MFNode' name='removeChildren'/>
        <field accessType='inputOutput' type='MFNode' name='children'/>
      </ProtoInterface>
      <ProtoBody>
        <Group>
          <IS>
            <connect nodeField='bboxSize' protoField='bboxSize'/>
            <connect nodeField='bboxCenter' protoField='bboxCenter'/>
            <connect nodeField='addChildren' protoField='addChildren'/>
            <connect nodeField='removeChildren' protoField='removeChildren'/>
            <connect nodeField='children' protoField='children'/>
          </IS>
        </Group>
      </ProtoBody>
    </ProtoDeclare>
    <ProtoDeclare name='GridTool'>
      <ProtoInterface>
        <field accessType='inputOutput' type='SFVec3f' name='translation'/>
        <field accessType='inputOutput' type='SFRotation' name='rotation'/>
        <field accessType='inputOutput' type='SFVec3f' name='scale' value='1 1 1'/>
        <field accessType='inputOutput' type='MFInt32' name='dimension' value='10, 10, 10'/>
        <field accessType='inputOutput' type='MFInt32' name='majorLineEvery' value='5, 5, 5'/>
        <field accessType='inputOutput' type='MFInt32' name='majorLineOffset' value='0, 0, 0'/>
        <field accessType='inputOutput' type='SFColor' name='color' value='0.5 0.5 0.5'/>
        <field accessType='inputOutput' type='SFFloat' name='transparency' value='0.8'/>
        <field accessType='inputOutput' type='SFColor' name='lineColor' value='0.9647059 0.6980392 0.4196078'/>
        <field accessType='inputOutput' type='SFFloat' name='lineTransparency' value='0.8'/>
        <field accessType='inputOutput' type='SFColor' name='majorLineColor' value='0.9647059 0.6980392 0.4196078'/>
        <field accessType='inputOutput' type='SFFloat' name='majorLineTransparency' value='0.6'/>
        <field accessType='inputOutput' type='SFDouble' name='snapDistance' value='0.25'/>
        <field accessType='inputOutput' type='SFBool' name='snapToCenter'/>
        <field accessType='initializeOnly' type='SFBool' name='solid' value='true'/>
        <field accessType='outputOnly' type='SFBool' name='isActive'/>
      </ProtoInterface>
      <ProtoBody>
        <Collision DEF='Grid_2'
            enabled='false'>
          <ProtoInstance name='TouchGroup'>
            <fieldValue name='enabled' value='false'/>
            <fieldValue name='children'>
              <ProtoInstance name='Grid' DEF='_4'>
                <IS>
                  <connect nodeField='translation' protoField='translation'/>
                  <connect nodeField='rotation' protoField='rotation'/>
                  <connect nodeField='scale' protoField='scale'/>
                  <connect nodeField='dimension' protoField='dimension'/>
                  <connect nodeField='majorLineEvery' protoField='majorLineEvery'/>
                  <connect nodeField='majorLineOffset' protoField='majorLineOffset'/>
                  <connect nodeField='color' protoField='color'/>
                  <connect nodeField='transparency' protoField='transparency'/>
                  <connect nodeField='lineColor' protoField='lineColor'/>
                  <connect nodeField='lineTransparency' protoField='lineTransparency'/>
                  <connect nodeField='majorLineColor' protoField='majorLineColor'/>
                  <connect nodeField='majorLineTransparency' protoField='majorLineTransparency'/>
                  <connect nodeField='solid' protoField='solid'/>
                </IS>
              </ProtoInstance>
            </fieldValue>
          </ProtoInstance>
          <Transform DEF='Handles'>
            <IS>
              <connect nodeField='rotation' protoField='rotation'/>
            </IS>
            <Transform DEF='Center'>
              <PlaneSensor DEF='_9'
                  axisRotation='1 0 0 1.5708'
                  autoOffset='false'>
                <IS>
                  <connect nodeField='offset' protoField='translation'/>
                  <connect nodeField='isActive' protoField='isActive'/>
                </IS>
              </PlaneSensor>
              <Transform>
                <IS>
                  <connect nodeField='translation' protoField='translation'/>
                </IS>
                <ScreenGroup>
                  <Transform DEF='Sphere'
                      scale='4 4 4'>
                    <Shape
                        castShadow='false'>
                      <Appearance DEF='_11'>
                        <Material
                            diffuseColor='1 0.7 0'/>
                        <ProtoInstance name='ToolShader' containerField='shaders'/>
                      </Appearance>
                      <Sphere/>
                    </Shape>
                  </Transform>
                </ScreenGroup>
              </Transform>
            </Transform>
            <Transform DEF='DimensionHandle'>
              <IS>
                <connect nodeField='translation' protoField='translation'/>
                <connect nodeField='scale' protoField='scale'/>
              </IS>
              <PlaneSensor DEF='_12'
                  axisRotation='1 0 0 1.5708'
                  autoOffset='false'
                  offset='5 0 5'>
                <IS>
                  <connect nodeField='isActive' protoField='isActive'/>
                </IS>
              </PlaneSensor>
              <Transform DEF='_13'
                  translation='5 0 5'>
                <ScreenGroup>
                  <Transform DEF='Edge'
                      scale='3 3 3'>
                    <Shape
                        castShadow='false'>
                      <Appearance USE='_11'/>
                      <Extrusion
                          convex='false'
                          crossSection='1 1, 1 -5, -1 -5, -1 -1, -5 -1, -5 1, 1 1'
                          spine='0 -1 0, 0 1 0'/>
                    </Shape>
                  </Transform>
                </ScreenGroup>
              </Transform>
            </Transform>
            <Transform DEF='ScaleHandle'>
              <IS>
                <connect nodeField='translation' protoField='translation'/>
              </IS>
              <PlaneSensor DEF='_14'
                  axisRotation='1 0 0 1.5708'
                  autoOffset='false'
                  offset='5 0 -5'>
                <IS>
                  <connect nodeField='isActive' protoField='isActive'/>
                </IS>
              </PlaneSensor>
              <Transform DEF='_15'
                  translation='5 0 -5'>
                <ScreenGroup>
                  <Transform DEF='Box'
                      scale='3 3 3'>
                    <Shape
                        castShadow='false'>
                      <Appearance USE='_11'/>
                      <Box/>
                    </Shape>
                  </Transform>
                </ScreenGroup>
              </Transform>
            </Transform>
          </Transform>
        </Collision>
        <Script DEF='DimensionScript'>
          <field accessType='inputOnly' type='SFVec3f' name='set_translation'/>
          <field accessType='inputOutput' type='SFVec3f' name='scale'/>
          <field accessType='inputOutput' type='MFInt32' name='dimension'/>
          <field accessType='outputOnly' type='SFVec3f' name='translation_changed'/>
          <IS>
            <connect nodeField='scale' protoField='scale'/>
            <connect nodeField='dimension' protoField='dimension'/>
          </IS>
<![CDATA[ecmascript:

function initialize ()
{
   eventsProcessed ();
}

function set_translation (value)
{
   var oddX = dimension [0] % 2;
   var oddZ = dimension [2] % 2;

   dimension [0] = Math .round (value .x);
   dimension [2] = Math .round (value .z);

   dimension [0] = Math .max (dimension [0], 1);
   dimension [2] = Math .max (dimension [2], 1);

   dimension [0] *= 2;
   dimension [2] *= 2;

   dimension [0] -= oddX;
   dimension [2] -= oddZ;
}

function eventsProcessed ()
{
   translation_changed = new SFVec3f (dimension [0] / 2 , 0, dimension [2] / 2);
}
]]>
        </Script>
        <Script DEF='MoveScript'>
          <field accessType='inputOnly' type='SFVec3f' name='set_translation'/>
          <field accessType='inputOutput' type='SFRotation' name='rotation'/>
          <field accessType='inputOutput' type='SFVec3f' name='scale'/>
          <field accessType='outputOnly' type='SFVec3f' name='translation_changed'/>
          <IS>
            <connect nodeField='rotation' protoField='rotation'/>
            <connect nodeField='scale' protoField='scale'/>
          </IS>
<![CDATA[ecmascript:

function set_translation (value)
{
   var translation = rotation .inverse () .multVec (value);

   if (scale .x)
      translation .x = Math .round (translation .x / scale .x) * scale .x;

   if (scale .y)
      translation .y = Math .round (translation .y / scale .y) * scale .y;

   if (scale .z)
      translation .z = Math .round (translation .z / scale .z) * scale .z;

   translation_changed = rotation .multVec (translation);
}
]]>
        </Script>
        <Script DEF='ScaleScript'>
          <field accessType='inputOnly' type='SFVec3f' name='set_translation'/>
          <field accessType='inputOutput' type='SFVec3f' name='scale'/>
          <field accessType='inputOutput' type='MFInt32' name='dimension'/>
          <field accessType='outputOnly' type='SFVec3f' name='translation_changed'/>
          <IS>
            <connect nodeField='scale' protoField='scale'/>
            <connect nodeField='dimension' protoField='dimension'/>
          </IS>
<![CDATA[ecmascript:

function initialize ()
{
   eventsProcessed ();
}

function set_translation (value)
{
   var length = new SFVec2f (2 * value .x / dimension [0], -2 * value .z / dimension [2]) .length ();
   var factor = length / new SFVec2f (scale .x, scale .z) .length ();

   scale .x *= factor;
   scale .y *= factor;
   scale .z *= factor;
}

function eventsProcessed ()
{
   translation_changed = new SFVec3f (scale .x * dimension [0] / 2, 0, -scale .z * dimension [2] / 2);
}]]>
        </Script>
        <ROUTE fromNode='_9' fromField='translation_changed' toNode='MoveScript' toField='set_translation'/>
        <ROUTE fromNode='DimensionScript' fromField='translation_changed' toNode='_12' toField='set_offset'/>
        <ROUTE fromNode='_12' fromField='translation_changed' toNode='DimensionScript' toField='set_translation'/>
        <ROUTE fromNode='DimensionScript' fromField='translation_changed' toNode='_13' toField='set_translation'/>
        <ROUTE fromNode='ScaleScript' fromField='translation_changed' toNode='_14' toField='set_offset'/>
        <ROUTE fromNode='_14' fromField='translation_changed' toNode='ScaleScript' toField='set_translation'/>
        <ROUTE fromNode='ScaleScript' fromField='translation_changed' toNode='_15' toField='set_translation'/>
        <ROUTE fromNode='MoveScript' fromField='translation_changed' toNode='_4' toField='set_translation'/>
      </ProtoBody>
    </ProtoDeclare>
  </Scene>
</X3D>
