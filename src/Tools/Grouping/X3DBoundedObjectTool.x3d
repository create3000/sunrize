<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE X3D PUBLIC "ISO//Web3D//DTD X3D 4.0//EN" "http://www.web3d.org/specifications/x3d-4.0.dtd">
<X3D profile='Interchange' version='4.0' xmlns:xsd='http://www.w3.org/2001/XMLSchema-instance' xsd:noNamespaceSchemaLocation='http://www.web3d.org/specifications/x3d-4.0.xsd'>
  <head>
    <component name='Layout' level='2'/>
    <component name='Scripting' level='1'/>
    <component name='X_ITE' level='1'/>
    <unit category='angle' name='degree' conversionFactor='0.017453292519943295'/>
    <meta name='comment' content='Rise and Shine'/>
    <meta name='created' content='Fri, 29 Aug 2014 13:13:27 GMT'/>
    <meta name='creator' content='Holger Seelig'/>
    <meta name='generator' content='Sunrize X3D Editor V1.2.7, https://create3000.github.io/sunrize/'/>
    <meta name='modified' content='Tue, 28 Nov 2023 22:34:13 GMT'/>
  </head>
  <Scene>
    <ExternProtoDeclare name='ToolShader' url='"../Shaders/ToolShader.x3d"'>
    </ExternProtoDeclare>
    <ProtoDeclare name='X3DBoundedObjectTool'>
      <ProtoInterface>
        <field accessType='inputOutput' type='SFBool' name='selected'/>
        <field accessType='inputOutput' type='SFVec3f' name='center'/>
        <field accessType='inputOutput' type='SFBool' name='centerDisplay'/>
        <field accessType='inputOutput' type='SFVec3f' name='axisOfRotation'/>
        <field accessType='inputOutput' type='SFBool' name='rectangleDisplay'/>
        <field accessType='inputOutput' type='SFVec3f' name='rectangleSize' value='1 1 1'/>
        <field accessType='inputOutput' type='SFVec3f' name='rectangleCenter'/>
        <field accessType='inputOutput' type='SFBool' name='bboxDisplay'/>
        <field accessType='inputOutput' type='SFInt32' name='bboxStyle' value='1'/>
        <field accessType='inputOutput' type='SFColor' name='bboxColor' value='1 1 1'/>
        <field accessType='inputOutput' type='SFVec3f' name='bboxSize' value='1 1 1'/>
        <field accessType='inputOutput' type='SFVec3f' name='bboxCenter'/>
      </ProtoInterface>
      <ProtoBody>
        <Collision
            enabled='false'>
          <Transform>
            <IS>
              <connect nodeField='translation' protoField='bboxCenter'/>
            </IS>
            <Shape DEF='BoundingBox_1'
                castShadow='false'>
              <IS>
                <connect nodeField='visible' protoField='bboxDisplay'/>
              </IS>
              <Appearance>
                <LineProperties
                    linewidthScaleFactor='2'>
                  <IS>
                    <connect nodeField='linetype' protoField='bboxStyle'/>
                  </IS>
                </LineProperties>
                <UnlitMaterial DEF='BBoxMaterial'>
                  <IS>
                    <connect nodeField='emissiveColor' protoField='bboxColor'/>
                  </IS>
                </UnlitMaterial>
                <DepthMode
                    polygonOffset='-1 -1'/>
              </Appearance>
              <IndexedLineSet
                  coordIndex='0, 1, 2, 3, 0, -1, 4, 5, 6, 7, 4, -1, 0, 4, -1, 3, 7, -1, 1, 5, -1, 2, 6, -1'>
                <Coordinate DEF='BBox'
                    point='-0.5 0.5 0.5, -0.5 -0.5 0.5, 0.5 -0.5 0.5, 0.5 0.5 0.5, -0.5 0.5 -0.5, -0.5 -0.5 -0.5, 0.5 -0.5 -0.5, 0.5 0.5 -0.5'/>
              </IndexedLineSet>
            </Shape>
            <Shape DEF='Axes'
                castShadow='false'>
              <Appearance>
                <DepthMode DEF='_12'
                    depthRange='0 0.01'/>
              </Appearance>
              <IndexedLineSet
                  colorPerVertex='false'
                  colorIndex='0, 1, 2'
                  coordIndex='0, 1, -1, 2, 3, -1, 4, 5, -1'>
                <Color
                    color='1 0 0, 0 1 0, 0 0 1'/>
                <Coordinate DEF='AxesCoord'
                    point='-0.5 0 0, 0.5 0 0, 0 -0.5 0, 0 0.5 0, 0 0 -0.5, 0 0 0.5'/>
              </IndexedLineSet>
            </Shape>
            <Transform DEF='XFrontHandle_1'
                translation='0.5 0 0'>
              <ScreenGroup>
                <Transform
                    translation='7 0 0'
                    rotation='0 0 -1 90'>
                  <Shape
                      castShadow='false'>
                    <Appearance DEF='Red_1'>
                      <Material
                          diffuseColor='1 0 0'/>
                      <ProtoInstance name='ToolShader' DEF='_11' containerField='shaders'/>
                      <DepthMode USE='_12'/>
                    </Appearance>
                    <Cone DEF='Arrow_1'
                        height='12'
                        bottomRadius='4'/>
                  </Shape>
                </Transform>
              </ScreenGroup>
            </Transform>
            <Transform DEF='XBackHandle'
                translation='-0.5 0 0'>
              <ScreenGroup>
                <Transform
                    translation='-1.5 0 0'
                    rotation='0 0 -1 90.0000000000002'>
                  <Shape
                      castShadow='false'>
                    <Appearance USE='Red_1'/>
                    <Cylinder DEF='_10'
                        height='3'
                        radius='4'/>
                  </Shape>
                </Transform>
              </ScreenGroup>
            </Transform>
            <Transform DEF='YFrontHandle_1'
                translation='0 0.5 0'>
              <ScreenGroup>
                <Transform
                    translation='0 7 0'>
                  <Shape
                      castShadow='false'>
                    <Appearance DEF='Green_1'>
                      <Material
                          diffuseColor='0 1 0'/>
                      <ProtoInstance name='ToolShader' USE='_11' containerField='shaders'/>
                      <DepthMode USE='_12'/>
                    </Appearance>
                    <Cone USE='Arrow_1'/>
                  </Shape>
                </Transform>
              </ScreenGroup>
            </Transform>
            <Transform DEF='YBackHandle'
                translation='0 -0.5 0'>
              <ScreenGroup>
                <Transform
                    translation='0 -1.5 0'>
                  <Shape
                      castShadow='false'>
                    <Appearance USE='Green_1'/>
                    <Cylinder USE='_10'/>
                  </Shape>
                </Transform>
              </ScreenGroup>
            </Transform>
            <Transform DEF='ZFrontHandle_1'
                translation='0 0 0.5'>
              <ScreenGroup>
                <Transform
                    translation='0 0 7'
                    rotation='1 0 0 90'>
                  <Shape
                      castShadow='false'>
                    <Appearance DEF='Blue_1'>
                      <Material
                          diffuseColor='0 0 1'/>
                      <ProtoInstance name='ToolShader' USE='_11' containerField='shaders'/>
                      <DepthMode USE='_12'/>
                    </Appearance>
                    <Cone USE='Arrow_1'/>
                  </Shape>
                </Transform>
              </ScreenGroup>
            </Transform>
            <Transform DEF='ZBackHandle'
                translation='0 0 -0.5'>
              <ScreenGroup>
                <Transform
                    translation='0 0 -1.5'
                    rotation='1 0 0 90'>
                  <Shape
                      castShadow='false'>
                    <Appearance USE='Blue_1'/>
                    <Cylinder USE='_10'/>
                  </Shape>
                </Transform>
              </ScreenGroup>
            </Transform>
          </Transform>
          <Group DEF='Center'>
            <IS>
              <connect nodeField='visible' protoField='centerDisplay'/>
            </IS>
            <Shape DEF='CenterLine'
                castShadow='false'>
              <Appearance>
                <LineProperties
                    linetype='3'
                    linewidthScaleFactor='2'/>
                <DepthMode USE='_12'/>
              </Appearance>
              <IndexedLineSet DEF='CenterIndexedLineSet'
                  coordIndex='0, 1, -1'>
                <Color
                    color='1 1 0, 1 1 0'/>
                <Coordinate DEF='CenterLineCoord'
                    point='0 0 0, 0 0 0'/>
              </IndexedLineSet>
            </Shape>
            <Transform DEF='_3'>
              <IS>
                <connect nodeField='translation' protoField='center'/>
              </IS>
              <ScreenGroup DEF='CenterPoint'>
                <Shape
                    castShadow='false'>
                  <Appearance>
                    <Material
                        diffuseColor='1 1 0'/>
                    <ProtoInstance name='ToolShader' USE='_11' containerField='shaders'/>
                    <DepthMode USE='_12'/>
                  </Appearance>
                  <Sphere
                      radius='5'/>
                </Shape>
              </ScreenGroup>
              <Inline DEF='Vector'
                  global='true'
                  load='false'
                  url='"Vector.x3d"'
                  visible='false'/>
            </Transform>
          </Group>
          <Transform DEF='Rectangle'>
            <IS>
              <connect nodeField='translation' protoField='rectangleCenter'/>
              <connect nodeField='visible' protoField='rectangleDisplay'/>
            </IS>
            <Shape DEF='Box_1'
                castShadow='false'>
              <Appearance>
                <LineProperties
                    linewidthScaleFactor='2'/>
                <Material DEF='BBoxMaterial_1'
                    emissiveColor='0 1 0'/>
                <ProtoInstance name='ToolShader' USE='_11' containerField='shaders'/>
                <DepthMode USE='_12'/>
              </Appearance>
              <IndexedLineSet
                  coordIndex='0, 1, 2, 3, 0, -1'>
                <Coordinate DEF='Rectangle_1'
                    point='-0.5 0.5 0, -0.5 -0.5 0, 0.5 -0.5 0, 0.5 0.5 0'/>
              </IndexedLineSet>
            </Shape>
          </Transform>
        </Collision>
        <Script DEF='BBoxScript'
            directOutput='true'>
          <field accessType='inputOutput' type='SFBool' name='rectangleDisplay'/>
          <field accessType='inputOutput' type='SFVec3f' name='rectangleSize'/>
          <field accessType='inputOutput' type='SFVec3f' name='bboxSize'/>
          <field accessType='initializeOnly' type='SFNode' name='rectangle'>
            <Coordinate USE='Rectangle_1'/>
          </field>
          <field accessType='initializeOnly' type='SFNode' name='bbox'>
            <Coordinate USE='BBox'/>
          </field>
          <field accessType='initializeOnly' type='SFNode' name='axes'>
            <Coordinate USE='AxesCoord'/>
          </field>
          <IS>
            <connect nodeField='rectangleDisplay' protoField='rectangleDisplay'/>
            <connect nodeField='rectangleSize' protoField='rectangleSize'/>
            <connect nodeField='bboxSize' protoField='bboxSize'/>
          </IS>
<![CDATA[ecmascript:

function initialize ()
{
   eventsProcessed ();
}

function eventsProcessed ()
{
   const bboxSize1_2 = bboxSize .divide (2);

   // Axes

   axes .point = new MFVec3f (new SFVec3f (-bboxSize1_2 .x, 0, 0),
                              new SFVec3f ( bboxSize1_2 .x, 0, 0),
                              new SFVec3f (0, -bboxSize1_2 .y, 0),
                              new SFVec3f (0,  bboxSize1_2 .y, 0),
                              new SFVec3f (0, 0, -bboxSize1_2 .z),
                              new SFVec3f (0, 0,  bboxSize1_2 .z));


   // BBox

   bbox .point = new MFVec3f (new SFVec3f (-bboxSize1_2 .x,  bboxSize1_2 .y,  bboxSize1_2 .z),
                              new SFVec3f (-bboxSize1_2 .x, -bboxSize1_2 .y,  bboxSize1_2 .z),
                              new SFVec3f ( bboxSize1_2 .x, -bboxSize1_2 .y,  bboxSize1_2 .z),
                              new SFVec3f ( bboxSize1_2 .x,  bboxSize1_2 .y,  bboxSize1_2 .z),
                              new SFVec3f (-bboxSize1_2 .x,  bboxSize1_2 .y, -bboxSize1_2 .z),
                              new SFVec3f (-bboxSize1_2 .x, -bboxSize1_2 .y, -bboxSize1_2 .z),
                              new SFVec3f ( bboxSize1_2 .x, -bboxSize1_2 .y, -bboxSize1_2 .z),
                              new SFVec3f ( bboxSize1_2 .x,  bboxSize1_2 .y, -bboxSize1_2 .z));

   if (rectangleDisplay)
   {
      const bboxSize1_2 = rectangleSize .divide (2);

      // BBox

      rectangle .point = new MFVec3f (new SFVec3f (-bboxSize1_2 .x,  bboxSize1_2 .y,  0),
                                      new SFVec3f (-bboxSize1_2 .x, -bboxSize1_2 .y,  0),
                                      new SFVec3f ( bboxSize1_2 .x, -bboxSize1_2 .y,  0),
                                      new SFVec3f ( bboxSize1_2 .x,  bboxSize1_2 .y,  0));
   }
}
]]>
        </Script>
        <Script DEF='HandlesScript'
            directOutput='true'>
          <field accessType='inputOutput' type='SFVec3f' name='bboxSize'/>
          <field accessType='initializeOnly' type='SFNode' name='xFront'>
            <Transform USE='XFrontHandle_1'/>
          </field>
          <field accessType='initializeOnly' type='SFNode' name='xBack'>
            <Transform USE='XBackHandle'/>
          </field>
          <field accessType='initializeOnly' type='SFNode' name='yFront'>
            <Transform USE='YFrontHandle_1'/>
          </field>
          <field accessType='initializeOnly' type='SFNode' name='yBack'>
            <Transform USE='YBackHandle'/>
          </field>
          <field accessType='initializeOnly' type='SFNode' name='zFront'>
            <Transform USE='ZFrontHandle_1'/>
          </field>
          <field accessType='initializeOnly' type='SFNode' name='zBack'>
            <Transform USE='ZBackHandle'/>
          </field>
          <IS>
            <connect nodeField='bboxSize' protoField='bboxSize'/>
          </IS>
<![CDATA[ecmascript:

function initialize ()
{
   eventsProcessed ();
}

function eventsProcessed ()
{
   // Position the arrows.

   const bboxSize1_2 = bboxSize .divide (2);

   xBack  .translation = new SFVec3f (-bboxSize1_2 .x, 0, 0);
   xFront .translation = new SFVec3f ( bboxSize1_2 .x, 0, 0);
   yBack  .translation = new SFVec3f (0, -bboxSize1_2 .y, 0);
   yFront .translation = new SFVec3f (0,  bboxSize1_2 .y, 0);
   zBack  .translation = new SFVec3f (0, 0, -bboxSize1_2 .z);
   zFront .translation = new SFVec3f (0, 0,  bboxSize1_2 .z);
}
]]>
        </Script>
        <Script DEF='CenterScript'
            directOutput='true'>
          <field accessType='inputOutput' type='SFVec3f' name='center'/>
          <field accessType='inputOutput' type='SFVec3f' name='bboxSize'/>
          <field accessType='inputOutput' type='SFVec3f' name='bboxCenter'/>
          <field accessType='initializeOnly' type='SFNode' name='coord'>
            <Coordinate USE='CenterLineCoord'/>
          </field>
          <IS>
            <connect nodeField='center' protoField='center'/>
            <connect nodeField='bboxSize' protoField='bboxSize'/>
            <connect nodeField='bboxCenter' protoField='bboxCenter'/>
          </IS>
<![CDATA[ecmascript:

function initialize ()
{
   eventsProcessed ();
}

function eventsProcessed ()
{
   coord .point [0] = center;
   coord .point [1] = bboxCenter;
}
]]>
        </Script>
        <Script DEF='AxisOfRotationScript'
            directOutput='true'>
          <field accessType='inputOutput' type='SFVec3f' name='vector'/>
          <field accessType='initializeOnly' type='SFVec3f' name='zAxis' value='0 0 1'/>
          <field accessType='initializeOnly' type='SFNode' name='transform'>
            <Transform USE='_3'/>
          </field>
          <field accessType='initializeOnly' type='SFNode' name='inline'>
            <Inline USE='Vector'/>
          </field>
          <IS>
            <connect nodeField='vector' protoField='axisOfRotation'/>
          </IS>
<![CDATA[ecmascript:

function initialize ()
{
   eventsProcessed ();
}

function eventsProcessed ()
{
   if (vector .x === 0 && vector .y === 0 && vector .z === 0)
   {
      inline .visible = false;
   }
   else
   {
      inline .load    = true;
      inline .visible = true;

      transform .rotation = new SFRotation (zAxis, vector);
   }
}
]]>
        </Script>
      </ProtoBody>
    </ProtoDeclare>
  </Scene>
</X3D>
