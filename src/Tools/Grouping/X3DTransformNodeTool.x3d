<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE X3D PUBLIC "ISO//Web3D//DTD X3D 4.0//EN" "http://www.web3d.org/specifications/x3d-4.0.dtd">
<X3D profile='Interchange' version='4.0' xmlns:xsd='http://www.w3.org/2001/XMLSchema-instance' xsd:noNamespaceSchemaLocation='http://www.web3d.org/specifications/x3d-4.0.xsd'>
  <head>
    <component name='Geometry2D' level='2'/>
    <component name='Layout' level='2'/>
    <component name='PointingDeviceSensor' level='1'/>
    <component name='Scripting' level='1'/>
    <component name='X_ITE' level='1'/>
    <unit category='angle' name='degree' conversionFactor='0.017453292519943295'/>
    <meta name='comment' content='Rise and Shine'/>
    <meta name='created' content='Fri, 29 Aug 2014 13:13:27 GMT'/>
    <meta name='creator' content='Holger Seelig'/>
    <meta name='generator' content='Sunrize X3D Editor V1.1.9, https://create3000.github.io/sunrize/'/>
    <meta name='modified' content='Wed, 22 Nov 2023 00:07:49 GMT'/>
  </head>
  <Scene>
    <ExternProtoDeclare name='ToolShader' url='"../Shaders/ToolShader.x3d"'>
    </ExternProtoDeclare>
    <ExternProtoDeclare name='BooleanSwitch' url='"BooleanSwitch.x3d#BooleanSwitch"'>
      <field accessType='inputOutput' type='SFBool' name='whichChoice'/>
      <field accessType='inputOutput' type='SFBool' name='visible'/>
      <field accessType='inputOutput' type='SFBool' name='bboxDisplay'/>
      <field accessType='initializeOnly' type='SFVec3f' name='bboxSize'/>
      <field accessType='initializeOnly' type='SFVec3f' name='bboxCenter'/>
      <field accessType='inputOnly' type='MFNode' name='addChildren'/>
      <field accessType='inputOnly' type='MFNode' name='removeChildren'/>
      <field accessType='inputOutput' type='MFNode' name='children'/>
    </ExternProtoDeclare>
    <ProtoDeclare name='Tool'>
      <ProtoInterface>
        <field accessType='inputOutput' type='SFBool' name='selected'/>
        <field accessType='inputOutput' type='SFVec3f' name='translation'/>
        <field accessType='inputOutput' type='SFRotation' name='rotation'/>
        <field accessType='inputOutput' type='SFVec3f' name='scale' value='1 1 1'/>
        <field accessType='inputOutput' type='SFRotation' name='scaleOrientation'/>
        <field accessType='inputOutput' type='SFVec3f' name='center'/>
        <field accessType='inputOutput' type='SFBool' name='undo' value='true'/>
        <field accessType='inputOutput' type='SFBool' name='keys' value='true'/>
        <field accessType='inputOutput' type='MFString' name='tools' value='"TRANSLATE", "ROTATE", "SCALE"'/>
        <field accessType='inputOutput' type='SFString' name='translateMode' value='TRANSLATE_ALONG_AXIS'/>
        <field accessType='inputOutput' type='SFBool' name='snapRotation'/>
        <field accessType='inputOutput' type='SFString' name='scaleMode' value='SCALE_FROM_CENTER'/>
        <field accessType='inputOutput' type='SFBool' name='scaleUniform'/>
        <field accessType='inputOutput' type='SFBool' name='xAxisDisplay' value='true'/>
        <field accessType='inputOutput' type='SFBool' name='yAxisDisplay' value='true'/>
        <field accessType='inputOutput' type='SFBool' name='zAxisDisplay' value='true'/>
        <field accessType='inputOutput' type='SFBool' name='scaleDisplay' value='true'/>
        <field accessType='inputOutput' type='SFBool' name='centerDisplay' value='true'/>
        <field accessType='inputOutput' type='SFBool' name='centerTool' value='true'/>
        <field accessType='inputOutput' type='SFBool' name='bboxDisplay' value='true'/>
        <field accessType='inputOutput' type='SFColor' name='bboxColor' value='1 1 1'/>
        <field accessType='inputOutput' type='SFVec3f' name='bboxSize' value='1 1 1'/>
        <field accessType='inputOutput' type='SFVec3f' name='bboxCenter'/>
        <field accessType='outputOnly' type='SFInt32' name='activeTool'/>
        <field accessType='outputOnly' type='SFBool' name='isCenterActive'/>
        <field accessType='outputOnly' type='SFBool' name='isActive'/>
      </ProtoInterface>
      <ProtoBody>
        <Collision
            enabled='false'>
          <Transform DEF='Transform'>
            <IS>
              <connect nodeField='translation' protoField='translation'/>
              <connect nodeField='rotation' protoField='rotation'/>
              <connect nodeField='scale' protoField='scale'/>
              <connect nodeField='scaleOrientation' protoField='scaleOrientation'/>
              <connect nodeField='center' protoField='center'/>
            </IS>
            <Transform>
              <IS>
                <connect nodeField='translation' protoField='bboxCenter'/>
              </IS>
              <Shape DEF='BoundingBox_1'
                  castShadow='false'>
                <IS>
                  <connect nodeField='visible' protoField='bboxDisplay'/>
                </IS>
                <Appearance>
                  <LineProperties DEF='_2'
                      linewidthScaleFactor='2'/>
                  <UnlitMaterial DEF='BBoxMaterial'>
                    <IS>
                      <connect nodeField='emissiveColor' protoField='bboxColor'/>
                    </IS>
                  </UnlitMaterial>
                </Appearance>
                <IndexedLineSet
                    coordIndex='0, 1, 2, 3, 0, -1, 4, 5, 6, 7, 4, -1, 0, 4, -1, 3, 7, -1, 1, 5, -1, 2, 6, -1'>
                  <Coordinate DEF='BBox'
                      point='-0.5 0.5 0.5, -0.5 -0.5 0.5, 0.5 -0.5 0.5, 0.5 0.5 0.5, -0.5 0.5 -0.5, -0.5 -0.5 -0.5, 0.5 -0.5 -0.5, 0.5 0.5 -0.5'/>
                </IndexedLineSet>
              </Shape>
              <Group DEF='XHandle_2'>
                <IS>
                  <connect nodeField='visible' protoField='xAxisDisplay'/>
                </IS>
                <Group DEF='Front'>
                  <Shape DEF='xAxis_1'
                      castShadow='false'>
                    <Appearance DEF='AxisStyle'>
                      <LineProperties
                          linewidthScaleFactor='2'/>
                      <DepthMode DEF='_4'
                          depthRange='0 0.1'/>
                    </Appearance>
                    <IndexedLineSet
                        colorPerVertex='false'
                        colorIndex='0'
                        coordIndex='0, 1, -1'>
                      <Color DEF='_28'
                          color='1 0 0, 0 1 0, 0 0 1'/>
                      <Coordinate DEF='AxesCoord_1'
                          point='-0.5 0 0, 0.5 0 0, 0 -0.5 0, 0 0.5 0, 0 0 -0.5, 0 0 0.6'/>
                    </IndexedLineSet>
                  </Shape>
                  <Transform DEF='XFront'
                      translation='0.5 0 0'>
                    <ScreenGroup>
                      <Switch DEF='_27'
                          whichChoice='0'>
                        <Transform
                            translation='9 0 0'
                            rotation='0 0 -1 90'>
                          <Shape
                              castShadow='false'>
                            <Appearance DEF='Red_1'>
                              <Material
                                  diffuseColor='1 0 0'/>
                              <ProtoInstance name='ToolShader' DEF='_3' containerField='shaders'/>
                              <DepthMode USE='_4'/>
                            </Appearance>
                            <Cone DEF='Arrow_1'
                                height='18'
                                bottomRadius='6'/>
                          </Shape>
                        </Transform>
                        <Transform
                            translation='6 0 0'>
                          <Shape
                              castShadow='false'>
                            <Appearance USE='Red_1'/>
                            <Sphere DEF='Sphere'
                                radius='6'/>
                          </Shape>
                        </Transform>
                        <Transform
                            translation='6 0 0'>
                          <Shape
                              castShadow='false'>
                            <Appearance USE='Red_1'/>
                            <Box DEF='Box_2'
                                size='12 12 12'/>
                          </Shape>
                        </Transform>
                      </Switch>
                    </ScreenGroup>
                  </Transform>
                  <TouchSensor DEF='ModeTouch'/>
                  <PlaneSensor DEF='XTranslationSensor'
                      description='x-Axis'
                      autoOffset='false'
                      maxPosition='-1 0'>
                    <IS>
                      <connect nodeField='isActive' protoField='isActive'/>
                    </IS>
                  </PlaneSensor>
                  <PlaneSensor DEF='XScaleFrontSensor'
                      description='x-Axis'
                      autoOffset='false'
                      maxPosition='-1 0'>
                    <IS>
                      <connect nodeField='isActive' protoField='isActive'/>
                    </IS>
                  </PlaneSensor>
                </Group>
                <Group DEF='Back'>
                  <Shape DEF='xAxis'
                      castShadow='false'>
                    <Appearance USE='AxisStyle'/>
                    <IndexedLineSet
                        colorPerVertex='false'
                        colorIndex='0'
                        coordIndex='0, 2, -1'>
                      <Color USE='_28'/>
                      <Coordinate USE='AxesCoord_1'/>
                    </IndexedLineSet>
                  </Shape>
                  <Transform DEF='XBack_1'
                      translation='-0.5 0 0'>
                    <ScreenGroup>
                      <Switch DEF='_26'
                          whichChoice='0'>
                        <Transform DEF='_8'
                            translation='-1.5 0 0'
                            rotation='0 0 -1 90'>
                          <Shape
                              castShadow='false'>
                            <Appearance USE='Red_1'/>
                            <Cylinder DEF='Back_1'
                                height='3'
                                radius='6'/>
                          </Shape>
                        </Transform>
                        <Transform USE='_8'/>
                        <Transform
                            translation='-1.5 0 0'
                            rotation='0 1 0 90'>
                          <Shape
                              castShadow='false'>
                            <Appearance DEF='Red_2'>
                              <Material
                                  diffuseColor='1 0 0'/>
                              <ProtoInstance name='ToolShader' containerField='shaders'/>
                              <DepthMode USE='_4'/>
                            </Appearance>
                            <Box DEF='_21'
                                size='12 12 3'/>
                          </Shape>
                        </Transform>
                      </Switch>
                    </ScreenGroup>
                  </Transform>
                  <TouchSensor USE='ModeTouch'/>
                  <PlaneSensor USE='XTranslationSensor'/>
                  <PlaneSensor DEF='XScaleBackSensor'
                      description='x-Axis'
                      autoOffset='false'
                      maxPosition='-1 0'>
                    <IS>
                      <connect nodeField='isActive' protoField='isActive'/>
                    </IS>
                  </PlaneSensor>
                </Group>
              </Group>
              <Group DEF='YHandle'>
                <IS>
                  <connect nodeField='visible' protoField='yAxisDisplay'/>
                </IS>
                <Group DEF='Front_1'>
                  <Shape DEF='yAxis'
                      castShadow='false'>
                    <Appearance USE='AxisStyle'/>
                    <IndexedLineSet
                        colorPerVertex='false'
                        colorIndex='1'
                        coordIndex='0, 3, -1'>
                      <Color USE='_28'/>
                      <Coordinate USE='AxesCoord_1'/>
                    </IndexedLineSet>
                  </Shape>
                  <Transform DEF='YFront'
                      translation='0 0.5 0'>
                    <ScreenGroup>
                      <Switch DEF='_25'
                          whichChoice='0'>
                        <Transform
                            translation='0 9 0'>
                          <Shape
                              castShadow='false'>
                            <Appearance DEF='Green_1'>
                              <Material
                                  diffuseColor='0 1 0'/>
                              <ProtoInstance name='ToolShader' USE='_3' containerField='shaders'/>
                              <DepthMode USE='_4'/>
                            </Appearance>
                            <Cone USE='Arrow_1'/>
                          </Shape>
                        </Transform>
                        <Transform
                            translation='0 6 0'>
                          <Shape
                              castShadow='false'>
                            <Appearance USE='Green_1'/>
                            <Sphere USE='Sphere'/>
                          </Shape>
                        </Transform>
                        <Transform
                            translation='0 6 0'>
                          <Shape
                              castShadow='false'>
                            <Appearance USE='Green_1'/>
                            <Box USE='Box_2'/>
                          </Shape>
                        </Transform>
                      </Switch>
                    </ScreenGroup>
                  </Transform>
                  <TouchSensor USE='ModeTouch'/>
                  <PlaneSensor DEF='YTranslationSensor'
                      description='y-Axis'
                      autoOffset='false'
                      maxPosition='0 -1'>
                    <IS>
                      <connect nodeField='isActive' protoField='isActive'/>
                    </IS>
                  </PlaneSensor>
                  <PlaneSensor DEF='YScaleFrontSensor'
                      description='y-Axis'
                      autoOffset='false'
                      maxPosition='0 -1'>
                    <IS>
                      <connect nodeField='isActive' protoField='isActive'/>
                    </IS>
                  </PlaneSensor>
                </Group>
                <Group DEF='Back_2'>
                  <Shape DEF='yAxis_1'
                      castShadow='false'>
                    <Appearance USE='AxisStyle'/>
                    <IndexedLineSet
                        colorPerVertex='false'
                        colorIndex='1'
                        coordIndex='0, 4, -1'>
                      <Color USE='_28'/>
                      <Coordinate USE='AxesCoord_1'/>
                    </IndexedLineSet>
                  </Shape>
                  <Transform DEF='YBack_1'
                      translation='0 -0.5 0'>
                    <ScreenGroup>
                      <Switch DEF='_24'
                          whichChoice='0'>
                        <Transform DEF='_13'
                            translation='0 -1.5 0'
                            rotation='0 0 -1 1.5707963267949'>
                          <Shape
                              castShadow='false'>
                            <Appearance USE='Green_1'/>
                            <Cylinder USE='Back_1'/>
                          </Shape>
                        </Transform>
                        <Transform USE='_13'/>
                        <Transform
                            translation='0 -1.5 0'
                            rotation='1 0 0 90'>
                          <Shape
                              castShadow='false'>
                            <Appearance USE='Green_1'/>
                            <Box USE='_21'/>
                          </Shape>
                        </Transform>
                      </Switch>
                    </ScreenGroup>
                  </Transform>
                  <TouchSensor USE='ModeTouch'/>
                  <PlaneSensor USE='YTranslationSensor'/>
                  <PlaneSensor DEF='YScaleBackSensor'
                      description='y-Axis'
                      autoOffset='false'
                      maxPosition='0 -1'>
                    <IS>
                      <connect nodeField='isActive' protoField='isActive'/>
                    </IS>
                  </PlaneSensor>
                </Group>
              </Group>
              <Group DEF='ZHandle'>
                <IS>
                  <connect nodeField='visible' protoField='zAxisDisplay'/>
                </IS>
                <Group DEF='Front_2'>
                  <Shape DEF='zAxis_1'
                      castShadow='false'>
                    <Appearance USE='AxisStyle'/>
                    <IndexedLineSet
                        colorPerVertex='false'
                        colorIndex='2'
                        coordIndex='0, 5, -1'>
                      <Color USE='_28'/>
                      <Coordinate USE='AxesCoord_1'/>
                    </IndexedLineSet>
                  </Shape>
                  <Transform DEF='ZFront'
                      translation='0 0 0.5'>
                    <ScreenGroup>
                      <Switch DEF='_23'
                          whichChoice='0'>
                        <Transform
                            translation='0 0 9'
                            rotation='1 0 0 90'>
                          <Shape
                              castShadow='false'>
                            <Appearance DEF='Blue'>
                              <Material
                                  diffuseColor='0 0 1'/>
                              <ProtoInstance name='ToolShader' USE='_3' containerField='shaders'/>
                              <DepthMode USE='_4'/>
                            </Appearance>
                            <Cone USE='Arrow_1'/>
                          </Shape>
                        </Transform>
                        <Transform
                            translation='0 0 6'>
                          <Shape
                              castShadow='false'>
                            <Appearance USE='Blue'/>
                            <Sphere USE='Sphere'/>
                          </Shape>
                        </Transform>
                        <Transform
                            translation='0 0 6'>
                          <Shape
                              castShadow='false'>
                            <Appearance USE='Blue'/>
                            <Box USE='Box_2'/>
                          </Shape>
                        </Transform>
                      </Switch>
                    </ScreenGroup>
                  </Transform>
                  <TouchSensor USE='ModeTouch'/>
                  <PlaneSensor DEF='ZTranslationSensor'
                      description='z-Axis'
                      axisRotation='0 -1 0 90'
                      autoOffset='false'
                      maxPosition='-1 0'>
                    <IS>
                      <connect nodeField='isActive' protoField='isActive'/>
                    </IS>
                  </PlaneSensor>
                  <PlaneSensor DEF='ZScaleFrontSensor'
                      description='z-Axis'
                      axisRotation='0 -1 0 90'
                      autoOffset='false'
                      maxPosition='-1 0'>
                    <IS>
                      <connect nodeField='isActive' protoField='isActive'/>
                    </IS>
                  </PlaneSensor>
                </Group>
                <Group DEF='Back_3'>
                  <Shape DEF='zAxis'
                      castShadow='false'>
                    <Appearance USE='AxisStyle'/>
                    <IndexedLineSet
                        colorPerVertex='false'
                        colorIndex='2'
                        coordIndex='0, 6, -1'>
                      <Color USE='_28'/>
                      <Coordinate USE='AxesCoord_1'/>
                    </IndexedLineSet>
                  </Shape>
                  <Transform DEF='ZBack'
                      translation='0 0 -0.5'>
                    <ScreenGroup>
                      <Switch DEF='_22'
                          whichChoice='0'>
                        <Transform DEF='_19'
                            translation='0 0 -1.5'
                            rotation='1 0 0 90'>
                          <Shape
                              castShadow='false'>
                            <Appearance USE='Blue'/>
                            <Cylinder USE='Back_1'/>
                          </Shape>
                        </Transform>
                        <Transform USE='_19'/>
                        <Transform
                            translation='0 0 -1.5'>
                          <Shape
                              castShadow='false'>
                            <Appearance USE='Blue'/>
                            <Box USE='_21'/>
                          </Shape>
                        </Transform>
                      </Switch>
                    </ScreenGroup>
                  </Transform>
                  <TouchSensor USE='ModeTouch'/>
                  <PlaneSensor USE='ZTranslationSensor'/>
                  <PlaneSensor DEF='ZScaleBackSensor'
                      description='z-Axis'
                      axisRotation='0 -1 0 90'
                      autoOffset='false'
                      maxPosition='-1 0'>
                    <IS>
                      <connect nodeField='isActive' protoField='isActive'/>
                    </IS>
                  </PlaneSensor>
                </Group>
              </Group>
              <Switch DEF='UniformScaleHandles'>
                <IS>
                  <connect nodeField='visible' protoField='scaleDisplay'/>
                </IS>
                <Group DEF='Empty'
                    visible='false'/>
                <Group USE='Empty'/>
                <Group>
                  <Transform DEF='ScaleHandle1'>
                    <PlaneSensor DEF='ScaleSensor1_1'
                        autoOffset='false'
                        maxPosition='-1 0'>
                      <IS>
                        <connect nodeField='isActive' protoField='isActive'/>
                      </IS>
                    </PlaneSensor>
                    <ScreenGroup DEF='_12'>
                      <Shape
                          castShadow='false'>
                        <Appearance>
                          <Material DEF='White'
                              diffuseColor='1 1 1'/>
                          <ProtoInstance name='ToolShader' USE='_3' containerField='shaders'/>
                          <DepthMode USE='_4'/>
                        </Appearance>
                        <Box USE='Box_2'/>
                      </Shape>
                    </ScreenGroup>
                  </Transform>
                  <Transform DEF='ScaleHandle2'>
                    <PlaneSensor DEF='ScaleSensor2'
                        autoOffset='false'
                        maxPosition='-1 0'>
                      <IS>
                        <connect nodeField='isActive' protoField='isActive'/>
                      </IS>
                    </PlaneSensor>
                    <ScreenGroup USE='_12'/>
                  </Transform>
                  <Transform DEF='ScaleHandle3'>
                    <PlaneSensor DEF='ScaleSensor3'
                        autoOffset='false'
                        maxPosition='-1 0'>
                      <IS>
                        <connect nodeField='isActive' protoField='isActive'/>
                      </IS>
                    </PlaneSensor>
                    <ScreenGroup USE='_12'/>
                  </Transform>
                  <Transform DEF='ScaleHandle4'>
                    <PlaneSensor DEF='ScaleSensor4'
                        autoOffset='false'
                        maxPosition='-1 0'>
                      <IS>
                        <connect nodeField='isActive' protoField='isActive'/>
                      </IS>
                    </PlaneSensor>
                    <ScreenGroup USE='_12'/>
                  </Transform>
                  <Transform DEF='ScaleHandle5'>
                    <PlaneSensor DEF='ScaleSensor5'
                        autoOffset='false'
                        maxPosition='-1 0'>
                      <IS>
                        <connect nodeField='isActive' protoField='isActive'/>
                      </IS>
                    </PlaneSensor>
                    <ScreenGroup USE='_12'/>
                  </Transform>
                  <Transform DEF='ScaleHandle6'>
                    <PlaneSensor DEF='ScaleSensor6'
                        autoOffset='false'
                        maxPosition='-1 0'>
                      <IS>
                        <connect nodeField='isActive' protoField='isActive'/>
                      </IS>
                    </PlaneSensor>
                    <ScreenGroup USE='_12'/>
                  </Transform>
                  <Transform DEF='ScaleHandle7'>
                    <PlaneSensor DEF='ScaleSensor7'
                        autoOffset='false'
                        maxPosition='-1 0'>
                      <IS>
                        <connect nodeField='isActive' protoField='isActive'/>
                      </IS>
                    </PlaneSensor>
                    <ScreenGroup USE='_12'/>
                  </Transform>
                  <Transform DEF='ScaleHandle8'>
                    <PlaneSensor DEF='ScaleSensor8'
                        autoOffset='false'
                        maxPosition='-1 0'>
                      <IS>
                        <connect nodeField='isActive' protoField='isActive'/>
                      </IS>
                    </PlaneSensor>
                    <ScreenGroup USE='_12'/>
                  </Transform>
                </Group>
              </Switch>
              <ScreenGroup DEF='BBoxCenterPoint'>
                <Transform
                    scale='0.6666667 0.6666667 0.6666667'>
                  <ProtoInstance name='BooleanSwitch' DEF='_1'>
                    <fieldValue name='children'>
                      <Shape DEF='YellowPoint'
                          castShadow='false'>
                        <Appearance DEF='Yellow'>
                          <Material
                              diffuseColor='1 1 0'/>
                          <ProtoInstance name='ToolShader' USE='_3' containerField='shaders'/>
                          <DepthMode USE='_4'/>
                        </Appearance>
                        <Sphere USE='Sphere'/>
                      </Shape>
                      <Shape DEF='BluePoint'
                          castShadow='false'>
                        <Appearance DEF='SkyBlue_2'>
                          <Material
                              diffuseColor='0 0.5 1'/>
                          <ProtoInstance name='ToolShader' USE='_3' containerField='shaders'/>
                          <DepthMode USE='_4'/>
                        </Appearance>
                        <Sphere USE='Sphere'/>
                      </Shape>
                    </fieldValue>
                  </ProtoInstance>
                </Transform>
                <TouchSensor DEF='_14'
                    description='BBox Center'/>
              </ScreenGroup>
            </Transform>
            <Group DEF='Center'>
              <IS>
                <connect nodeField='visible' protoField='centerDisplay'/>
              </IS>
              <ProtoInstance name='BooleanSwitch' DEF='CenterLine'>
                <fieldValue name='children'>
                  <Shape DEF='_16'
                      castShadow='false'>
                    <Appearance DEF='CenterLineStyle'>
                      <LineProperties
                          linetype='3'
                          linewidthScaleFactor='2'/>
                      <DepthMode USE='_4'/>
                    </Appearance>
                    <IndexedLineSet DEF='CenterIndexedLineSet_1'
                        coordIndex='0, 1, -1'>
                      <Color DEF='Yellow_1'
                          color='1 1 0, 1 1 0'/>
                      <Coordinate DEF='CenterLineCoord'
                          point='0 0 0, 0 0 0'/>
                    </IndexedLineSet>
                  </Shape>
                  <Shape DEF='CenterLine_1'
                      castShadow='false'>
                    <Appearance USE='CenterLineStyle'/>
                    <IndexedLineSet
                        coordIndex='0, 1, -1'>
                      <Color DEF='SkyBlue_1'
                          color='0 0.5 1, 0 0.5 1'/>
                      <Coordinate USE='CenterLineCoord'/>
                    </IndexedLineSet>
                  </Shape>
                </fieldValue>
              </ProtoInstance>
              <Transform DEF='CenterPoint'>
                <IS>
                  <connect nodeField='translation' protoField='center'/>
                </IS>
                <ScreenGroup>
                  <ProtoInstance name='BooleanSwitch' USE='_1'/>
                </ScreenGroup>
                <TouchSensor DEF='_10'
                    description='Center'>
                  <IS>
                    <connect nodeField='enabled' protoField='centerTool'/>
                  </IS>
                </TouchSensor>
              </Transform>
              <Transform DEF='_30'>
                <Transform DEF='CenterTool'>
                  <IS>
                    <connect nodeField='translation' protoField='center'/>
                    <connect nodeField='visible' protoField='centerTool'/>
                  </IS>
                  <ScreenGroup>
                    <Group
                        bboxSize='40 40 40'/>
                  </ScreenGroup>
                </Transform>
              </Transform>
            </Group>
            <Switch DEF='RotationHandles'>
              <Group USE='Empty'/>
              <Transform>
                <IS>
                  <connect nodeField='translation' protoField='center'/>
                </IS>
                <ScreenGroup>
                  <Group DEF='XHandle'>
                    <CylinderSensor DEF='XRotationSensor_1'
                        description='x-Axis'
                        axisRotation='0 0 1 90'
                        diskAngle='74.4845'
                        autoOffset='false'>
                      <IS>
                        <connect nodeField='isActive' protoField='isActive'/>
                      </IS>
                    </CylinderSensor>
                    <Transform DEF='XRotationHandle_1'
                        rotation='0 1 0 90'
                        scale='80 80 80'>
                      <Shape
                          castShadow='false'>
                        <Appearance>
                          <LineProperties DEF='_29'
                              linewidthScaleFactor='3'/>
                          <UnlitMaterial
                              emissiveColor='1 0 0'/>
                          <DepthMode USE='_4'/>
                        </Appearance>
                        <Circle2D/>
                      </Shape>
                    </Transform>
                  </Group>
                  <Group DEF='YHandle_1'>
                    <CylinderSensor DEF='YRotationSensor_1'
                        description='y-Axis'
                        diskAngle='74.48451'
                        autoOffset='false'>
                      <IS>
                        <connect nodeField='isActive' protoField='isActive'/>
                      </IS>
                    </CylinderSensor>
                    <Transform DEF='YRotationHandle_1'
                        rotation='1 0 0 90'
                        scale='80 80 80'>
                      <Shape
                          castShadow='false'>
                        <Appearance>
                          <LineProperties USE='_29'/>
                          <UnlitMaterial
                              emissiveColor='0 1 0'/>
                          <DepthMode USE='_4'/>
                        </Appearance>
                        <Circle2D/>
                      </Shape>
                    </Transform>
                  </Group>
                  <Group DEF='ZHandle_1'>
                    <CylinderSensor DEF='ZRotationSensor'
                        description='z-Axis'
                        axisRotation='1 0 0 90'
                        diskAngle='74.48451'
                        autoOffset='false'>
                      <IS>
                        <connect nodeField='isActive' protoField='isActive'/>
                      </IS>
                    </CylinderSensor>
                    <Transform DEF='ZRotationHandle'
                        scale='80 80 80'>
                      <Shape
                          castShadow='false'>
                        <Appearance>
                          <LineProperties USE='_29'/>
                          <UnlitMaterial
                              emissiveColor='0 0 1'/>
                          <DepthMode USE='_4'/>
                        </Appearance>
                        <Circle2D/>
                      </Shape>
                    </Transform>
                  </Group>
                </ScreenGroup>
              </Transform>
              <Group USE='Empty'/>
            </Switch>
          </Transform>
        </Collision>
        <Script DEF='BBoxScript'
            directOutput='true'>
          <field accessType='inputOutput' type='SFVec3f' name='bboxSize'/>
          <field accessType='initializeOnly' type='SFNode' name='bbox'>
            <Coordinate USE='BBox'/>
          </field>
          <field accessType='initializeOnly' type='SFNode' name='axes'>
            <Coordinate USE='AxesCoord_1'/>
          </field>
          <IS>
            <connect nodeField='bboxSize' protoField='bboxSize'/>
          </IS>
<![CDATA[ecmascript:

function initialize ()
{
   eventsProcessed ();
}

function eventsProcessed ()
{
   const bboxSize1_2 = bboxSize .divide (2);

   // Axes

   axes .point = new MFVec3f (new SFVec3f (),
                              new SFVec3f ( bboxSize1_2 .x, 0, 0),
                              new SFVec3f (-bboxSize1_2 .x, 0, 0),
                              new SFVec3f (0,  bboxSize1_2 .y, 0),
                              new SFVec3f (0, -bboxSize1_2 .y, 0),
                              new SFVec3f (0, 0,  bboxSize1_2 .z),
                              new SFVec3f (0, 0, -bboxSize1_2 .z));


   // BBox

   bbox .point = new MFVec3f (new SFVec3f (-bboxSize1_2 .x,  bboxSize1_2 .y,  bboxSize1_2 .z),
                              new SFVec3f (-bboxSize1_2 .x, -bboxSize1_2 .y,  bboxSize1_2 .z),
                              new SFVec3f ( bboxSize1_2 .x, -bboxSize1_2 .y,  bboxSize1_2 .z),
                              new SFVec3f ( bboxSize1_2 .x,  bboxSize1_2 .y,  bboxSize1_2 .z),
                              new SFVec3f (-bboxSize1_2 .x,  bboxSize1_2 .y, -bboxSize1_2 .z),
                              new SFVec3f (-bboxSize1_2 .x, -bboxSize1_2 .y, -bboxSize1_2 .z),
                              new SFVec3f ( bboxSize1_2 .x, -bboxSize1_2 .y, -bboxSize1_2 .z),
                              new SFVec3f ( bboxSize1_2 .x,  bboxSize1_2 .y, -bboxSize1_2 .z));
}
]]>
        </Script>
        <Script DEF='HandesScript'
            directOutput='true'>
          <field accessType='inputOutput' type='SFString' name='translateMode'/>
          <field accessType='inputOutput' type='SFVec3f' name='bboxSize'/>
          <field accessType='initializeOnly' type='MFNode' name='axisHandles'>
            <Transform USE='XFront'/>
            <Transform USE='YFront'/>
            <Transform USE='ZFront'/>
            <Transform USE='XBack_1'/>
            <Transform USE='YBack_1'/>
            <Transform USE='ZBack'/>
          </field>
          <field accessType='initializeOnly' type='MFNode' name='translateSensors'>
            <PlaneSensor USE='XTranslationSensor'/>
            <PlaneSensor USE='YTranslationSensor'/>
            <PlaneSensor USE='ZTranslationSensor'/>
          </field>
          <field accessType='initializeOnly' type='MFNode' name='scaleHandles'>
            <Transform USE='ScaleHandle1'/>
            <Transform USE='ScaleHandle2'/>
            <Transform USE='ScaleHandle3'/>
            <Transform USE='ScaleHandle4'/>
            <Transform USE='ScaleHandle5'/>
            <Transform USE='ScaleHandle6'/>
            <Transform USE='ScaleHandle7'/>
            <Transform USE='ScaleHandle8'/>
          </field>
          <field accessType='initializeOnly' type='MFNode' name='scaleSensors'>
            <PlaneSensor USE='ScaleSensor1_1'/>
            <PlaneSensor USE='ScaleSensor2'/>
            <PlaneSensor USE='ScaleSensor3'/>
            <PlaneSensor USE='ScaleSensor4'/>
            <PlaneSensor USE='ScaleSensor5'/>
            <PlaneSensor USE='ScaleSensor6'/>
            <PlaneSensor USE='ScaleSensor7'/>
            <PlaneSensor USE='ScaleSensor8'/>
          </field>
          <IS>
            <connect nodeField='translateMode' protoField='translateMode'/>
            <connect nodeField='bboxSize' protoField='bboxSize'/>
          </IS>
<![CDATA[ecmascript:

const xAxis = new SFVec3f (1, 0, 0);

function initialize ()
{
   set_translateMode ();
   set_bboxSize ();
}

function set_translateMode ()
{
   // Set translate sensors axis rotation and max position.

   switch (translateMode)
   {
      case "TRANSLATE_ALONG_AXIS":
      {
         translateSensors [0] .axisRotation = new SFRotation ();
         translateSensors [1] .axisRotation = new SFRotation ();
         translateSensors [2] .axisRotation = new SFRotation (0, -1, 0, Math .PI / 2);

         translateSensors [0] .maxPosition = new SFVec2f (-1, 0);
         translateSensors [1] .maxPosition = new SFVec2f (0, -1);
         translateSensors [2] .maxPosition = new SFVec2f (-1, 0);
         break;
      }
      case "TRANSLATE_ALONG_PLANE":
      {
         translateSensors [0] .axisRotation = new SFRotation (0, 1, 0, Math .PI / 2);
         translateSensors [1] .axisRotation = new SFRotation (-1, 0, 0, Math .PI / 2);
         translateSensors [2] .axisRotation = new SFRotation ();

         translateSensors [0] .maxPosition = new SFVec2f (-1, -1);
         translateSensors [1] .maxPosition = new SFVec2f (-1, -1);
         translateSensors [2] .maxPosition = new SFVec2f (-1, -1);
         break;
      }
   }
}

function set_bboxSize ()
{
   // Position the axis handles.

   const bboxSize1_2 = bboxSize .divide (2);

   axisHandles [0] .translation = new SFVec3f (bboxSize1_2 .x, 0, 0);
   axisHandles [1] .translation = new SFVec3f (0, bboxSize1_2 .y, 0);
   axisHandles [2] .translation = new SFVec3f (0, 0, bboxSize1_2 .z);

   axisHandles [3] .translation = new SFVec3f (-bboxSize1_2 .x, 0, 0);
   axisHandles [4] .translation = new SFVec3f (0, -bboxSize1_2 .y, 0);
   axisHandles [5] .translation = new SFVec3f (0, 0, -bboxSize1_2 .z);

   // Position uniform scale handles and set axis rotation of corresponding sensor.

   scaleHandles [0] .translation = new SFVec3f ( bboxSize1_2 .x,  bboxSize1_2 .y,  bboxSize1_2 .z);
   scaleHandles [1] .translation = new SFVec3f (-bboxSize1_2 .x,  bboxSize1_2 .y,  bboxSize1_2 .z);
   scaleHandles [2] .translation = new SFVec3f (-bboxSize1_2 .x, -bboxSize1_2 .y,  bboxSize1_2 .z);
   scaleHandles [3] .translation = new SFVec3f ( bboxSize1_2 .x, -bboxSize1_2 .y,  bboxSize1_2 .z);

   scaleHandles [4] .translation = new SFVec3f ( bboxSize1_2 .x,  bboxSize1_2 .y, -bboxSize1_2 .z);
   scaleHandles [5] .translation = new SFVec3f (-bboxSize1_2 .x,  bboxSize1_2 .y, -bboxSize1_2 .z);
   scaleHandles [6] .translation = new SFVec3f (-bboxSize1_2 .x, -bboxSize1_2 .y, -bboxSize1_2 .z);
   scaleHandles [7] .translation = new SFVec3f ( bboxSize1_2 .x, -bboxSize1_2 .y, -bboxSize1_2 .z);

   for (let i = 0; i < 8; ++ i)
      scaleSensors [i] .axisRotation = new SFRotation (xAxis, scaleHandles [i] .translation);
}
]]>
        </Script>
        <Script DEF='ModeScript'>
          <field accessType='inputOnly' type='SFTime' name='set_time'/>
          <field accessType='inputOutput' type='MFString' name='tools'/>
          <field accessType='inputOutput' type='SFString' name='translateMode'/>
          <field accessType='inputOutput' type='SFVec3f' name='bboxSize'/>
          <field accessType='outputOnly' type='SFBool' name='translate'/>
          <field accessType='outputOnly' type='SFBool' name='rotate'/>
          <field accessType='outputOnly' type='SFBool' name='scale'/>
          <field accessType='outputOnly' type='SFInt32' name='activeTool'/>
          <field accessType='initializeOnly' type='SFTime' name='time'/>
          <field accessType='initializeOnly' type='SFInt32' name='tool'/>
          <IS>
            <connect nodeField='tools' protoField='tools'/>
            <connect nodeField='translateMode' protoField='translateMode'/>
            <connect nodeField='bboxSize' protoField='bboxSize'/>
            <connect nodeField='activeTool' protoField='activeTool'/>
          </IS>
<![CDATA[ecmascript:

function initialize ()
{
   set_tool (0);
}

function set_tools ()
{
   set_tool (0);
}

function set_time (value)
{
   if (value - time < 0.4)
   {
      time = 0;

      set_next ();
   }
   else
   {
      time = value;
   }
}

function set_next ()
{
   if (bboxSize .length ())
      set_tool ((tool + 1) % tools .length);
   else
      set_tool (0);
}

function set_tool (value)
{
   tool      = value;
   translate = false;
   rotate    = false;
   scale     = false;

   switch (tools [value])
   {
      case "TRANSLATE":
      {
         translate  = true;
         activeTool = 0;
         break;
      }
      case "ROTATE":
      {
         rotate     = true;
         activeTool = 1;
         break;
      }
      case "SCALE":
      {
         scale      = true;
         activeTool = 2;
         break;
      }
   }
}
]]>
        </Script>
        <Script DEF='TranslateScript'
            directOutput='true'>
          <field accessType='inputOutput' type='SFBool' name='active'/>
          <field accessType='inputOnly' type='SFVec3f' name='set_xTranslation'/>
          <field accessType='inputOnly' type='SFVec3f' name='set_yTranslation'/>
          <field accessType='inputOnly' type='SFVec3f' name='set_zTranslation'/>
          <field accessType='inputOutput' type='SFVec3f' name='translation'/>
          <field accessType='inputOutput' type='SFRotation' name='rotation'/>
          <field accessType='inputOutput' type='SFVec3f' name='scale'/>
          <field accessType='inputOutput' type='SFRotation' name='scaleOrientation'/>
          <field accessType='inputOutput' type='SFVec3f' name='center'/>
          <field accessType='inputOutput' type='SFString' name='translateMode'/>
          <field accessType='inputOutput' type='SFBool' name='keepCenter'/>
          <field accessType='initializeOnly' type='SFVec3f' name='initialTranslation'/>
          <field accessType='initializeOnly' type='SFVec3f' name='initialCenter'/>
          <field accessType='initializeOnly' type='SFInt32' name='events'/>
          <IS>
            <connect nodeField='translation' protoField='translation'/>
            <connect nodeField='rotation' protoField='rotation'/>
            <connect nodeField='scale' protoField='scale'/>
            <connect nodeField='scaleOrientation' protoField='scaleOrientation'/>
            <connect nodeField='center' protoField='center'/>
            <connect nodeField='translateMode' protoField='translateMode'/>
          </IS>
<![CDATA[ecmascript:

let lastTranslateFunction, lastValue;

function set_active (value)
{
   if (!value)
      return;

   initialTranslation = translation;
   initialCenter      = center;

   events = 4;
}

function set_translateMode (value)
{
   if (!active)
      return;

   lastTranslateFunction ?.call (this, lastValue);
}

function set_xTranslation (value)
{
   [lastTranslateFunction, lastValue] = [set_xTranslation, value];

   switch (translateMode)
   {
      case "TRANSLATE_ALONG_AXIS":
         return translate (new SFVec3f (value .x, 0, 0));
      case "TRANSLATE_ALONG_PLANE":
         return translate (new SFVec3f (0, value .y, value .z));
   }
}

function set_yTranslation (value)
{
   [lastTranslateFunction, lastValue] = [set_yTranslation, value];

   switch (translateMode)
   {
      case "TRANSLATE_ALONG_AXIS":
         return translate (new SFVec3f (0, value .y, 0));
      case "TRANSLATE_ALONG_PLANE":
         return translate (new SFVec3f (value .x, 0, value .z));
   }
}

function set_zTranslation (value)
{
   [lastTranslateFunction, lastValue] = [set_zTranslation, value];

   switch (translateMode)
   {
      case "TRANSLATE_ALONG_AXIS":
         return translate (new SFVec3f (0, 0, value .z));
      case "TRANSLATE_ALONG_PLANE":
         return translate (new SFVec3f (value .x, value .y, 0));
   }
}

function translate (value)
{
   // Prevent accidentially move.
   if (events)
   {
      -- events;
      return;
   }

   if (keepCenter)
   {
      translation = initialTranslation .add (value);
      center      = initialCenter .subtract (value);
   }
   else
   {
      const matrix = new SFMatrix4f ();

      matrix .setTransform (translation,
                            rotation,
                            scale,
                            scaleOrientation,
                            center);

      const offset = matrix .multDirMatrix (value);

      translation = initialTranslation .add (offset);
   }
}
]]>
        </Script>
        <Script DEF='RotateScript'
            directOutput='true'>
          <field accessType='inputOnly' type='SFBool' name='set_active'/>
          <field accessType='inputOnly' type='SFRotation' name='set_xRotation'/>
          <field accessType='inputOnly' type='SFRotation' name='set_yRotation'/>
          <field accessType='inputOnly' type='SFRotation' name='set_zRotation'/>
          <field accessType='inputOutput' type='SFRotation' name='rotation'/>
          <field accessType='inputOutput' type='SFVec3f' name='scale'/>
          <field accessType='inputOutput' type='SFRotation' name='scaleOrientation'/>
          <field accessType='inputOutput' type='SFBool' name='snap'/>
          <field accessType='initializeOnly' type='SFRotation' name='initialRotation'/>
          <field accessType='initializeOnly' type='SFVec3f' name='initialScale' value='1 1 1'/>
          <field accessType='initializeOnly' type='SFRotation' name='initialScaleOrientation'/>
          <field accessType='initializeOnly' type='SFInt32' name='events'/>
          <IS>
            <connect nodeField='rotation' protoField='rotation'/>
            <connect nodeField='scale' protoField='scale'/>
            <connect nodeField='scaleOrientation' protoField='scaleOrientation'/>
            <connect nodeField='snap' protoField='snapRotation'/>
          </IS>
<![CDATA[ecmascript:

function set_active (value)
{
   if (!value)
      return;

   // Normalize scale rotation matrix.

   const scaleRotation = new SFMatrix4f ();

   scaleRotation .setTransform (null, rotation, scale, scaleOrientation);
   scaleRotation .getTransform (null, initialRotation, initialScale, initialScaleOrientation);

   rotation         = initialRotation;
   scale            = initialScale;
   scaleOrientation = initialScaleOrientation;

   events = 4;
}

function set_xRotation (value)
{
   rotate (value);
}

function set_yRotation (value)
{
   rotate (value);
}

function set_zRotation (value)
{
   rotate (value);
}

function rotate (value)
{
   if (events)
   {
      // Prevent accidentially move.
      -- events;
      return;
   }

   if (snap)
   {
      const
         snapAngle = 15 * Math .PI/ 180,
         angle     = Math .round (value .angle / snapAngle) * snapAngle;

      value = new SFRotation (value .getAxis (), angle);
   }

   rotation = value .multiply (initialRotation);
}
]]>
        </Script>
        <Script DEF='ScaleScript'>
          <field accessType='inputOutput' type='SFBool' name='active'/>
          <field accessType='inputOnly' type='SFVec3f' name='set_xScaleFront'/>
          <field accessType='inputOnly' type='SFVec3f' name='set_yScaleFront'/>
          <field accessType='inputOnly' type='SFVec3f' name='set_zScaleFront'/>
          <field accessType='inputOnly' type='SFVec3f' name='set_xScaleBack'/>
          <field accessType='inputOnly' type='SFVec3f' name='set_yScaleBack'/>
          <field accessType='inputOnly' type='SFVec3f' name='set_zScaleBack'/>
          <field accessType='inputOnly' type='SFVec3f' name='set_scale1'/>
          <field accessType='inputOnly' type='SFVec3f' name='set_scale2'/>
          <field accessType='inputOnly' type='SFVec3f' name='set_scale3'/>
          <field accessType='inputOnly' type='SFVec3f' name='set_scale4'/>
          <field accessType='inputOnly' type='SFVec3f' name='set_scale5'/>
          <field accessType='inputOnly' type='SFVec3f' name='set_scale6'/>
          <field accessType='inputOnly' type='SFVec3f' name='set_scale7'/>
          <field accessType='inputOnly' type='SFVec3f' name='set_scale8'/>
          <field accessType='inputOutput' type='SFVec3f' name='translation'/>
          <field accessType='inputOutput' type='SFRotation' name='rotation'/>
          <field accessType='inputOutput' type='SFVec3f' name='scale'/>
          <field accessType='inputOutput' type='SFRotation' name='scaleOrientation'/>
          <field accessType='inputOutput' type='SFVec3f' name='center'/>
          <field accessType='inputOutput' type='SFVec3f' name='bboxSize'/>
          <field accessType='inputOutput' type='SFVec3f' name='bboxCenter'/>
          <field accessType='inputOutput' type='SFString' name='scaleMode'/>
          <field accessType='inputOutput' type='SFBool' name='scaleUniform'/>
          <field accessType='inputOutput' type='SFBool' name='keepCenter'/>
          <field accessType='initializeOnly' type='SFVec3f' name='initialTranslation'/>
          <field accessType='initializeOnly' type='SFVec3f' name='initialScale'/>
          <field accessType='initializeOnly' type='SFVec3f' name='initialCenter'/>
          <field accessType='initializeOnly' type='SFMatrix4f' name='initialMatrix'/>
          <field accessType='initializeOnly' type='SFVec3f' name='distanceFromCenter'/>
          <field accessType='initializeOnly' type='SFInt32' name='events'/>
          <field accessType='initializeOnly' type='SFNode' name='lineProperties'>
            <LineProperties USE='_2'/>
          </field>
          <IS>
            <connect nodeField='translation' protoField='translation'/>
            <connect nodeField='rotation' protoField='rotation'/>
            <connect nodeField='scale' protoField='scale'/>
            <connect nodeField='scaleOrientation' protoField='scaleOrientation'/>
            <connect nodeField='center' protoField='center'/>
            <connect nodeField='bboxSize' protoField='bboxSize'/>
            <connect nodeField='bboxCenter' protoField='bboxCenter'/>
            <connect nodeField='scaleMode' protoField='scaleMode'/>
            <connect nodeField='scaleUniform' protoField='scaleUniform'/>
          </IS>
<![CDATA[ecmascript:

let lastScaleFunction, lastValue;

function set_active (value)
{
   if (!value)
      return;

   initialTranslation = translation;
   initialScale       = scale;
   initialCenter      = center;

   initialMatrix .setTransform (translation,
                                rotation,
                                scale,
                                scaleOrientation,
                                center);

   distanceFromCenter = bboxCenter .subtract (center);

   events = 4;
}

function set_scale ()
{
   const matrix = new SFMatrix4f ();

   matrix .setTransform (translation,
                         rotation,
                         scale,
                         scaleOrientation,
                         center);

   const sub = new SFMatrix3f (matrix [0], matrix [1], matrix [2],
                               matrix [4], matrix [5], matrix [6],
                               matrix [8], matrix [9], matrix [10]);

   if (sub .determinant () >= 0)
      lineProperties .linetype = 1; // SOLID
   else
      lineProperties .linetype = 2; // Negtative scale, DASHED
}

function set_scaleMode ()
{
   if (!active)
      return;

   lastScaleFunction ?.call (this, lastValue);
}

function set_scaleUniform ()
{
   set_scaleMode ();
}

function set_xScaleFront (value)
{
   [lastScaleFunction, lastValue] = [set_xScaleFront, value];

   if (!bboxSize .x)
      return;

   if (scaleUniform)
      scaleTransformUniform (value, Math .sign (value .x), new SFVec3f (-1, 0, 0));
   else
      scaleTransformAxis ("x", value, 1);
}

function set_yScaleFront (value)
{
   [lastScaleFunction, lastValue] = [set_yScaleFront, value];

   if (!bboxSize .y)
      return;

   if (scaleUniform)
      scaleTransformUniform (value, Math .sign (value .y), new SFVec3f (0, -1, 0));
  else
      scaleTransformAxis ("y", value, 1);
}

function set_zScaleFront (value)
{
   [lastScaleFunction, lastValue] = [set_zScaleFront, value];

   if (!bboxSize .z)
      return;

   if (scaleUniform)
      scaleTransformUniform (value, Math .sign (value .z), new SFVec3f (0, 0, -1));
   else
      scaleTransformAxis ("z", value, 1);
}

function set_xScaleBack (value)
{
   [lastScaleFunction, lastValue] = [set_xScaleBack, value];

   if (!bboxSize .x)
      return;

   if (scaleUniform)
      scaleTransformUniform (value, Math .sign (-value .x), new SFVec3f (1, 0, 0));
   else
      scaleTransformAxis ("x", value, -1);
}

function set_yScaleBack (value)
{
   [lastScaleFunction, lastValue] = [set_yScaleBack, value];

   if (!bboxSize .y)
      return;

   if (scaleUniform)
      scaleTransformUniform (value, Math .sign (-value .y), new SFVec3f (0, 1, 0));
   else
      scaleTransformAxis ("y", value, -1);
}

function set_zScaleBack (value)
{
   [lastScaleFunction, lastValue] = [set_zScaleBack, value];

   if (!bboxSize .z)
      return;

   if (scaleUniform)
      scaleTransformUniform (value, Math .sign (-value .z), new SFVec3f (0, 0, 1));
   else
      scaleTransformAxis ("z", value, -1);
}

function set_scale1 (value)
{
   [lastScaleFunction, lastValue] = [set_scale1, value];

   scaleTransformUniform (value, Math .sign (value .x), new SFVec3f (-1, -1, -1));
}

function set_scale2 (value)
{
   [lastScaleFunction, lastValue] = [set_scale2, value];

   scaleTransformUniform (value, Math .sign (-value .x), new SFVec3f (1, -1, -1));
}

function set_scale3 (value)
{
   [lastScaleFunction, lastValue] = [set_scale3, value];

   scaleTransformUniform (value, Math .sign (-value .x), new SFVec3f (1, 1, -1));
}

function set_scale4 (value)
{
   [lastScaleFunction, lastValue] = [set_scale4, value];

   scaleTransformUniform (value, Math .sign (value .x), new SFVec3f (-1, 1, -1));
}

function set_scale5 (value)
{
   [lastScaleFunction, lastValue] = [set_scale5, value];

   scaleTransformUniform (value, Math .sign (value .x), new SFVec3f (-1, -1, 1));
}

function set_scale6 (value)
{
   [lastScaleFunction, lastValue] = [set_scale6, value];

   scaleTransformUniform (value, Math .sign (-value .x), new SFVec3f (1, -1, 1));
}

function set_scale7 (value)
{
   [lastScaleFunction, lastValue] = [set_scale7, value];

   scaleTransformUniform (value, Math .sign (-value .x), new SFVec3f (1, 1, 1));
}

function set_scale8 (value)
{
   [lastScaleFunction, lastValue] = [set_scale8, value];

   scaleTransformUniform (value, Math .sign (value .x), new SFVec3f (-1, 1, 1));
}

function scaleTransformAxis (axis, value, sgn)
{
   value = value [axis];

   switch (scaleMode)
   {
      case "SCALE_FROM_OPPOSITE_HANDLE":
      {
         const
            vector = new SFVec3f (1, 1, 1),
            offset = new SFVec3f ();

         vector [axis] = 1 + sgn * value / bboxSize [axis];
         offset [axis] = -sgn * bboxSize [axis] / 2;

         scaleTransform (vector, offset);
         break;
      }
      case "SCALE_FROM_CENTER":
      {
         const
            vector = new SFVec3f (1, 1, 1),
            offset = new SFVec3f ();

         vector [axis] = 1 + 2 * sgn * value / bboxSize [axis];

         scaleTransform (vector, offset);
         break;
      }
   }
}

function scaleTransformUniform (value, sgn, centerOffset)
{
   switch (scaleMode)
   {
      case "SCALE_FROM_OPPOSITE_HANDLE":
      {
         const s = 1 + sgn * value .length () / bboxSize .length ();

         centerOffset = centerOffset .multVec (bboxSize .divide (2));

         scaleTransform (new SFVec3f (s, s, s), centerOffset);
         break;
      }
      case "SCALE_FROM_CENTER":
      {
         const s = 1 + 2 * sgn * value .length () / bboxSize .length ();

         scaleTransform (new SFVec3f (s, s, s), new SFVec3f ());
         break;
      }
   }
}

function scaleTransform (value, centerOffset)
{
   if (events)
   {
      // Prevent accidentially move.
      -- events;
      return;
   }

   const scaleMatrix = new SFMatrix4f ();
   scaleMatrix .setTransform (new SFVec3f (), new SFRotation (), value);

   const
      scaledMatrix = initialMatrix .multLeft (scaleMatrix),
      t            = new SFVec3f (),
      r            = new SFRotation (),
      s            = new SFVec3f (),
      so           = new SFRotation ();

   scaledMatrix .getTransform (t, r, s, so, center);

   if (s .x && s .y && s .z)
   {
      translation      = t;
      rotation         = r;
      scale            = s;
      scaleOrientation = so;

      if (keepCenter)
         translateKeepCenter (scaledMatrix, distanceFromCenter .add (centerOffset));
      else
         translate (scaledMatrix, distanceFromCenter .add (centerOffset));
   }
}

function translateKeepCenter (scaledMatrix, distanceFromCenter)
{
   const centerOffset = scaledMatrix .inverse () .multDirMatrix (scaledMatrix .multDirMatrix (distanceFromCenter) .subtract (initialMatrix .multDirMatrix (distanceFromCenter)));

   translation = initialTranslation .subtract (centerOffset);
   center      = initialCenter .add (centerOffset);
}

function translate (scaledMatrix, distanceFromCenter)
{
   const centerOffset = scaledMatrix .multDirMatrix (distanceFromCenter) .subtract (initialMatrix .multDirMatrix (distanceFromCenter));

   translation = initialTranslation .subtract (centerOffset);
}
]]>
        </Script>
        <Script DEF='CenterScript'
            directOutput='true'>
          <field accessType='inputOnly' type='SFBool' name='set_moveCenterToBBoxCenter'/>
          <field accessType='inputOnly' type='SFTime' name='set_time'/>
          <field accessType='inputOutput' type='SFBool' name='active'/>
          <field accessType='inputOutput' type='SFVec3f' name='translation'/>
          <field accessType='inputOutput' type='SFRotation' name='rotation'/>
          <field accessType='inputOutput' type='SFVec3f' name='scale'/>
          <field accessType='inputOutput' type='SFRotation' name='scaleOrientation'/>
          <field accessType='inputOutput' type='SFVec3f' name='center'/>
          <field accessType='inputOutput' type='SFVec3f' name='bboxCenter'/>
          <field accessType='outputOnly' type='SFBool' name='keepCenter'/>
          <field accessType='initializeOnly' type='SFMatrix4f' name='initialMatrix'/>
          <field accessType='initializeOnly' type='SFNode' name='coord'>
            <Coordinate USE='CenterLineCoord'/>
          </field>
          <field accessType='initializeOnly' type='SFNode' name='centerTool'>
            <Transform USE='CenterTool'/>
          </field>
          <IS>
            <connect nodeField='active' protoField='isCenterActive'/>
            <connect nodeField='translation' protoField='translation'/>
            <connect nodeField='rotation' protoField='rotation'/>
            <connect nodeField='scale' protoField='scale'/>
            <connect nodeField='scaleOrientation' protoField='scaleOrientation'/>
            <connect nodeField='center' protoField='center'/>
            <connect nodeField='bboxCenter' protoField='bboxCenter'/>
          </IS>
<![CDATA[ecmascript:

function initialize ()
{
   set_center ();
}

function set_moveCenterToBBoxCenter (value)
{
   if (value)
   {
      active = true;
   }
   else
   {
      const matrix = new SFMatrix4f ();

      matrix .setTransform (translation, rotation, scale, scaleOrientation, center);
      matrix .getTransform (translation, null, null, null, bboxCenter);

      center = bboxCenter;

      setTimeout (() => active = false);
   }
}

async function set_time ()
{
   keepCenter = !keepCenter;

   if (!keepCenter)
      return;

   if (centerTool .getValue () .getTool ())
      return;

   const tool = await centerTool .getValue () .addTool () .getToolInstance ();

   Browser .addRoute (tool, "isActive", this, "active");

   tool .undo          = false;
   tool .tools         = new MFString ("TRANSLATE");
   tool .centerDisplay = false;
   tool .bboxDisplay   = false;
}

function set_active (value)
{
   if (!value)
      return;

   initialMatrix .setTransform (translation, rotation, scale, scaleOrientation, center);
}

function set_center ()
{
   coord .point [0] = center;
   coord .point [1] = bboxCenter;

   if (active)
      initialMatrix .getTransform (translation, null, null, null, center);
}

function set_bboxCenter ()
{
   set_center ();
}
]]>
        </Script>
        <ROUTE fromNode='XTranslationSensor' fromField='translation_changed' toNode='TranslateScript' toField='set_xTranslation'/>
        <ROUTE fromNode='YTranslationSensor' fromField='translation_changed' toNode='TranslateScript' toField='set_yTranslation'/>
        <ROUTE fromNode='ZTranslationSensor' fromField='translation_changed' toNode='TranslateScript' toField='set_zTranslation'/>
        <ROUTE fromNode='ZTranslationSensor' fromField='isActive' toNode='TranslateScript' toField='set_active'/>
        <ROUTE fromNode='YTranslationSensor' fromField='isActive' toNode='TranslateScript' toField='set_active'/>
        <ROUTE fromNode='XTranslationSensor' fromField='isActive' toNode='TranslateScript' toField='set_active'/>
        <ROUTE fromNode='ModeTouch' fromField='touchTime' toNode='ModeScript' toField='set_time'/>
        <ROUTE fromNode='ModeScript' fromField='activeTool' toNode='_22' toField='set_whichChoice'/>
        <ROUTE fromNode='ModeScript' fromField='activeTool' toNode='_23' toField='set_whichChoice'/>
        <ROUTE fromNode='ModeScript' fromField='activeTool' toNode='_24' toField='set_whichChoice'/>
        <ROUTE fromNode='ModeScript' fromField='activeTool' toNode='_25' toField='set_whichChoice'/>
        <ROUTE fromNode='ModeScript' fromField='activeTool' toNode='_26' toField='set_whichChoice'/>
        <ROUTE fromNode='ModeScript' fromField='activeTool' toNode='_27' toField='set_whichChoice'/>
        <ROUTE fromNode='ModeScript' fromField='translate' toNode='ZTranslationSensor' toField='set_enabled'/>
        <ROUTE fromNode='ModeScript' fromField='translate' toNode='YTranslationSensor' toField='set_enabled'/>
        <ROUTE fromNode='ModeScript' fromField='translate' toNode='XTranslationSensor' toField='set_enabled'/>
        <ROUTE fromNode='ZScaleBackSensor' fromField='isActive' toNode='ScaleScript' toField='set_active'/>
        <ROUTE fromNode='ZScaleFrontSensor' fromField='isActive' toNode='ScaleScript' toField='set_active'/>
        <ROUTE fromNode='YScaleBackSensor' fromField='isActive' toNode='ScaleScript' toField='set_active'/>
        <ROUTE fromNode='YScaleFrontSensor' fromField='isActive' toNode='ScaleScript' toField='set_active'/>
        <ROUTE fromNode='XScaleBackSensor' fromField='isActive' toNode='ScaleScript' toField='set_active'/>
        <ROUTE fromNode='XScaleFrontSensor' fromField='isActive' toNode='ScaleScript' toField='set_active'/>
        <ROUTE fromNode='XScaleFrontSensor' fromField='translation_changed' toNode='ScaleScript' toField='set_xScaleFront'/>
        <ROUTE fromNode='YScaleFrontSensor' fromField='translation_changed' toNode='ScaleScript' toField='set_yScaleFront'/>
        <ROUTE fromNode='ZScaleFrontSensor' fromField='translation_changed' toNode='ScaleScript' toField='set_zScaleFront'/>
        <ROUTE fromNode='XScaleBackSensor' fromField='translation_changed' toNode='ScaleScript' toField='set_xScaleBack'/>
        <ROUTE fromNode='YScaleBackSensor' fromField='translation_changed' toNode='ScaleScript' toField='set_yScaleBack'/>
        <ROUTE fromNode='ZScaleBackSensor' fromField='translation_changed' toNode='ScaleScript' toField='set_zScaleBack'/>
        <ROUTE fromNode='ModeScript' fromField='activeTool' toNode='UniformScaleHandles' toField='set_whichChoice'/>
        <ROUTE fromNode='ScaleSensor8' fromField='isActive' toNode='ScaleScript' toField='set_active'/>
        <ROUTE fromNode='ScaleSensor8' fromField='translation_changed' toNode='ScaleScript' toField='set_scale8'/>
        <ROUTE fromNode='ScaleSensor7' fromField='isActive' toNode='ScaleScript' toField='set_active'/>
        <ROUTE fromNode='ScaleSensor7' fromField='translation_changed' toNode='ScaleScript' toField='set_scale7'/>
        <ROUTE fromNode='ScaleSensor6' fromField='isActive' toNode='ScaleScript' toField='set_active'/>
        <ROUTE fromNode='ScaleSensor6' fromField='translation_changed' toNode='ScaleScript' toField='set_scale6'/>
        <ROUTE fromNode='ScaleSensor5' fromField='isActive' toNode='ScaleScript' toField='set_active'/>
        <ROUTE fromNode='ScaleSensor5' fromField='translation_changed' toNode='ScaleScript' toField='set_scale5'/>
        <ROUTE fromNode='ScaleSensor4' fromField='isActive' toNode='ScaleScript' toField='set_active'/>
        <ROUTE fromNode='ScaleSensor4' fromField='translation_changed' toNode='ScaleScript' toField='set_scale4'/>
        <ROUTE fromNode='ScaleSensor3' fromField='isActive' toNode='ScaleScript' toField='set_active'/>
        <ROUTE fromNode='ScaleSensor3' fromField='translation_changed' toNode='ScaleScript' toField='set_scale3'/>
        <ROUTE fromNode='ScaleSensor2' fromField='isActive' toNode='ScaleScript' toField='set_active'/>
        <ROUTE fromNode='ScaleSensor2' fromField='translation_changed' toNode='ScaleScript' toField='set_scale2'/>
        <ROUTE fromNode='ScaleSensor1_1' fromField='translation_changed' toNode='ScaleScript' toField='set_scale1'/>
        <ROUTE fromNode='ScaleSensor1_1' fromField='isActive' toNode='ScaleScript' toField='set_active'/>
        <ROUTE fromNode='_10' fromField='touchTime' toNode='CenterScript' toField='set_time'/>
        <ROUTE fromNode='CenterScript' fromField='keepCenter' toNode='TranslateScript' toField='set_keepCenter'/>
        <ROUTE fromNode='CenterScript' fromField='keepCenter' toNode='_1' toField='set_whichChoice'/>
        <ROUTE fromNode='CenterScript' fromField='keepCenter' toNode='ScaleScript' toField='set_keepCenter'/>
        <ROUTE fromNode='CenterScript' fromField='keepCenter' toNode='CenterLine' toField='set_whichChoice'/>
        <ROUTE fromNode='ModeScript' fromField='scale' toNode='ScaleSensor1_1' toField='set_enabled'/>
        <ROUTE fromNode='ModeScript' fromField='scale' toNode='ScaleSensor2' toField='set_enabled'/>
        <ROUTE fromNode='ModeScript' fromField='scale' toNode='ScaleSensor3' toField='set_enabled'/>
        <ROUTE fromNode='ModeScript' fromField='scale' toNode='ScaleSensor4' toField='set_enabled'/>
        <ROUTE fromNode='ModeScript' fromField='scale' toNode='ScaleSensor5' toField='set_enabled'/>
        <ROUTE fromNode='ModeScript' fromField='scale' toNode='ScaleSensor6' toField='set_enabled'/>
        <ROUTE fromNode='ModeScript' fromField='scale' toNode='ScaleSensor7' toField='set_enabled'/>
        <ROUTE fromNode='ModeScript' fromField='scale' toNode='ScaleSensor8' toField='set_enabled'/>
        <ROUTE fromNode='ModeScript' fromField='scale' toNode='ZScaleBackSensor' toField='set_enabled'/>
        <ROUTE fromNode='ModeScript' fromField='scale' toNode='ZScaleFrontSensor' toField='set_enabled'/>
        <ROUTE fromNode='ModeScript' fromField='scale' toNode='YScaleBackSensor' toField='set_enabled'/>
        <ROUTE fromNode='ModeScript' fromField='scale' toNode='YScaleFrontSensor' toField='set_enabled'/>
        <ROUTE fromNode='ModeScript' fromField='scale' toNode='XScaleBackSensor' toField='set_enabled'/>
        <ROUTE fromNode='ModeScript' fromField='scale' toNode='XScaleFrontSensor' toField='set_enabled'/>
        <ROUTE fromNode='ModeScript' fromField='activeTool' toNode='RotationHandles' toField='set_whichChoice'/>
        <ROUTE fromNode='ZRotationSensor' fromField='isActive' toNode='RotateScript' toField='set_active'/>
        <ROUTE fromNode='YRotationSensor_1' fromField='isActive' toNode='RotateScript' toField='set_active'/>
        <ROUTE fromNode='XRotationSensor_1' fromField='isActive' toNode='RotateScript' toField='set_active'/>
        <ROUTE fromNode='XRotationSensor_1' fromField='rotation_changed' toNode='RotateScript' toField='set_xRotation'/>
        <ROUTE fromNode='YRotationSensor_1' fromField='rotation_changed' toNode='RotateScript' toField='set_yRotation'/>
        <ROUTE fromNode='ZRotationSensor' fromField='rotation_changed' toNode='RotateScript' toField='set_zRotation'/>
        <ROUTE fromNode='_14' fromField='isActive' toNode='CenterScript' toField='set_moveCenterToBBoxCenter'/>
        <ROUTE fromNode='CenterScript' fromField='keepCenter' toNode='_30' toField='set_visible'/>
      </ProtoBody>
    </ProtoDeclare>
    <ProtoInstance name='Tool'>
      <fieldValue name='translation' value='-0.8999743 0 0'/>
      <fieldValue name='undo' value='false'/>
      <fieldValue name='scaleUniform' value='true'/>
      <fieldValue name='bboxSize' value='2 3 4'/>
    </ProtoInstance>
  </Scene>
</X3D>
