<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE X3D PUBLIC "ISO//Web3D//DTD X3D 4.0//EN" "http://www.web3d.org/specifications/x3d-4.0.dtd">
<X3D profile='Interchange' version='4.0' xmlns:xsd='http://www.w3.org/2001/XMLSchema-instance' xsd:noNamespaceSchemaLocation='http://www.web3d.org/specifications/x3d-4.0.xsd'>
  <head>
    <component name='Layout' level='2'/>
    <component name='PointingDeviceSensor' level='1'/>
    <component name='Scripting' level='1'/>
    <unit category='angle' name='degree' conversionFactor='0.017453292519943295'/>
    <meta name='comment' content='Rise and Shine'/>
    <meta name='created' content='Fri, 29 Aug 2014 13:13:27 GMT'/>
    <meta name='creator' content='Holger Seelig'/>
    <meta name='generator' content='Sunrize X3D Editor V1.1.9, https://create3000.github.io/sunrize/'/>
    <meta name='modified' content='Sat, 18 Nov 2023 01:12:13 GMT'/>
  </head>
  <Scene>
    <ExternProtoDeclare name='ToolShader' url='"../Shaders/ToolShader.x3d"'>
    </ExternProtoDeclare>
    <ProtoDeclare name='Tool'>
      <ProtoInterface>
        <field accessType='inputOutput' type='SFBool' name='selected'/>
        <field accessType='inputOutput' type='SFVec3f' name='translation'/>
        <field accessType='inputOutput' type='SFRotation' name='rotation'/>
        <field accessType='inputOutput' type='SFVec3f' name='scale' value='1 1 1'/>
        <field accessType='inputOutput' type='SFRotation' name='scaleOrientation'/>
        <field accessType='inputOutput' type='SFVec3f' name='center'/>
        <field accessType='inputOutput' type='MFString' name='tools' value='"TRANSLATE", "ROTATE", "SCALE"'/>
        <field accessType='inputOutput' type='SFString' name='translateMode' value='TRANSLATE_AXES'/>
        <field accessType='inputOutput' type='SFBool' name='scaleXAxis' value='true'/>
        <field accessType='inputOutput' type='SFBool' name='scaleYAxis' value='true'/>
        <field accessType='inputOutput' type='SFBool' name='scaleZAxis' value='true'/>
        <field accessType='inputOutput' type='SFBool' name='scaleUniform' value='true'/>
        <field accessType='inputOutput' type='MFString' name='scaleModes' value='"SCALE_FROM_CENTER", "SCALE_FROM_EDGE"'/>
        <field accessType='inputOutput' type='SFString' name='scaleMode' value='SCALE_FROM_CENTER'/>
        <field accessType='inputOutput' type='MFString' name='connectedAxes'/>
        <field accessType='inputOutput' type='SFBool' name='xAxisDisplay' value='true'/>
        <field accessType='inputOutput' type='SFBool' name='yAxisDisplay' value='true'/>
        <field accessType='inputOutput' type='SFBool' name='zAxisDisplay' value='true'/>
        <field accessType='inputOutput' type='SFBool' name='centerDisplay' value='true'/>
        <field accessType='inputOutput' type='SFBool' name='bboxDisplay'/>
        <field accessType='inputOutput' type='SFInt32' name='bboxStyle' value='1'/>
        <field accessType='inputOutput' type='SFColor' name='bboxColor' value='1 1 1'/>
        <field accessType='inputOutput' type='SFVec3f' name='bboxSize' value='1 1 1'/>
        <field accessType='inputOutput' type='SFVec3f' name='bboxCenter'/>
        <field accessType='outputOnly' type='SFInt32' name='activeTool'/>
        <field accessType='outputOnly' type='SFBool' name='isActive'/>
      </ProtoInterface>
      <ProtoBody>
        <Collision
            enabled='false'>
          <Group DEF='BoundingBox'>
            <Shape DEF='Box'
                castShadow='false'>
              <IS>
                <connect nodeField='visible' protoField='bboxDisplay'/>
              </IS>
              <Appearance>
                <LineProperties
                    linewidthScaleFactor='2'>
                  <IS>
                    <connect nodeField='linetype' protoField='bboxStyle'/>
                  </IS>
                </LineProperties>
                <UnlitMaterial DEF='BBoxMaterial'>
                  <IS>
                    <connect nodeField='emissiveColor' protoField='bboxColor'/>
                  </IS>
                </UnlitMaterial>
              </Appearance>
              <IndexedLineSet
                  coordIndex='0, 1, 2, 3, 0, -1, 4, 5, 6, 7, 4, -1, 0, 4, -1, 3, 7, -1, 1, 5, -1, 2, 6, -1'>
                <Coordinate DEF='BBox'
                    point='-0.5 0.5 0.5, -0.5 -0.5 0.5, 0.5 -0.5 0.5, 0.5 0.5 0.5, -0.5 0.5 -0.5, -0.5 -0.5 -0.5, 0.5 -0.5 -0.5, 0.5 0.5 -0.5'/>
              </IndexedLineSet>
            </Shape>
            <Shape DEF='xAxis_1'
                castShadow='false'>
              <IS>
                <connect nodeField='visible' protoField='xAxisDisplay'/>
              </IS>
              <IndexedLineSet
                  colorPerVertex='false'
                  colorIndex='0'
                  coordIndex='0, 1, -1'>
                <Color DEF='_4'
                    color='1 0 0, 0 1 0, 0 0 1'/>
                <Coordinate DEF='AxesCoord'
                    point='-0.5 0 0, 0.5 0 0, 0 -0.5 0, 0 0.5 0, 0 0 -0.5, 0 0 0.6'/>
              </IndexedLineSet>
            </Shape>
            <Shape DEF='yAxis_1'
                castShadow='false'>
              <IS>
                <connect nodeField='visible' protoField='yAxisDisplay'/>
              </IS>
              <IndexedLineSet
                  colorPerVertex='false'
                  colorIndex='1'
                  coordIndex='2, 3, -1'>
                <Color USE='_4'/>
                <Coordinate USE='AxesCoord'/>
              </IndexedLineSet>
            </Shape>
            <Shape DEF='zAxis'
                castShadow='false'>
              <IS>
                <connect nodeField='visible' protoField='zAxisDisplay'/>
              </IS>
              <IndexedLineSet
                  colorPerVertex='false'
                  colorIndex='2'
                  coordIndex='4, 5, -1'>
                <Color USE='_4'/>
                <Coordinate USE='AxesCoord'/>
              </IndexedLineSet>
            </Shape>
          </Group>
          <Group DEF='AdjustmentHandles'>
            <Group DEF='XHandle_2'>
              <IS>
                <connect nodeField='visible' protoField='xAxisDisplay'/>
              </IS>
              <Group DEF='Front'>
                <Transform DEF='XFront'
                    translation='0.5 0 0'>
                  <ScreenGroup>
                    <Switch DEF='_27'
                        whichChoice='0'>
                      <Transform
                          translation='9 0 0'
                          rotation='0 0 -1 90'>
                        <Shape
                            castShadow='false'>
                          <Appearance DEF='Red_1'>
                            <Material
                                diffuseColor='1 0 0'/>
                            <ProtoInstance name='ToolShader' DEF='_17' containerField='shaders'/>
                          </Appearance>
                          <Cone DEF='Arrow_1'
                              height='18'
                              bottomRadius='6'/>
                        </Shape>
                      </Transform>
                      <Transform
                          translation='6 0 0'>
                        <Shape
                            castShadow='false'>
                          <Appearance USE='Red_1'/>
                          <Sphere DEF='Sphere_1'
                              radius='6'/>
                        </Shape>
                      </Transform>
                      <Transform
                          translation='6 0 0'>
                        <Shape
                            castShadow='false'>
                          <Appearance USE='Red_1'/>
                          <Box DEF='Box_2'
                              size='12 12 12'/>
                        </Shape>
                      </Transform>
                    </Switch>
                  </ScreenGroup>
                </Transform>
                <TouchSensor DEF='ModeTouch'/>
                <PlaneSensor DEF='XTranslationSensor'
                    description='x-Axis'
                    autoOffset='false'
                    maxPosition='-1 0'>
                  <IS>
                    <connect nodeField='isActive' protoField='isActive'/>
                  </IS>
                </PlaneSensor>
                <PlaneSensor DEF='XPlaneSensor_1'
                    axisRotation='0 1 0 90'
                    autoOffset='false'>
                  <IS>
                    <connect nodeField='isActive' protoField='isActive'/>
                  </IS>
                </PlaneSensor>
                <PlaneSensor DEF='XScaleFrontSensor'
                    description='x-Axis'
                    autoOffset='false'
                    maxPosition='-1 0'>
                  <IS>
                    <connect nodeField='isActive' protoField='isActive'/>
                  </IS>
                </PlaneSensor>
              </Group>
              <Group DEF='Back'>
                <Transform DEF='XBack_1'
                    translation='-0.5 0 0'>
                  <ScreenGroup>
                    <Switch DEF='_26'
                        whichChoice='0'>
                      <Transform DEF='_8'
                          translation='-1.5 0 0'
                          rotation='0 0 -1 90'>
                        <Shape
                            castShadow='false'>
                          <Appearance USE='Red_1'/>
                          <Cylinder DEF='Back_1'
                              height='3'
                              radius='6'/>
                        </Shape>
                      </Transform>
                      <Transform USE='_8'/>
                      <Transform
                          translation='-1.5 0 0'
                          rotation='0 1 0 90'>
                        <Shape
                            castShadow='false'>
                          <Appearance DEF='Red_2'>
                            <Material
                                diffuseColor='1 0 0'/>
                            <ProtoInstance name='ToolShader' containerField='shaders'/>
                          </Appearance>
                          <Box DEF='_21'
                              size='12 12 3'/>
                        </Shape>
                      </Transform>
                    </Switch>
                  </ScreenGroup>
                </Transform>
                <TouchSensor USE='ModeTouch'/>
                <PlaneSensor USE='XTranslationSensor'/>
                <PlaneSensor USE='XPlaneSensor_1'/>
                <PlaneSensor DEF='XScaleBackSensor'
                    description='x-Axis'
                    autoOffset='false'
                    maxPosition='-1 0'>
                  <IS>
                    <connect nodeField='isActive' protoField='isActive'/>
                  </IS>
                </PlaneSensor>
              </Group>
            </Group>
            <Group DEF='YHandle'>
              <IS>
                <connect nodeField='visible' protoField='yAxisDisplay'/>
              </IS>
              <Group DEF='Front_1'>
                <Transform DEF='YFront'
                    translation='0 0.5 0'>
                  <ScreenGroup>
                    <Switch DEF='_25'
                        whichChoice='0'>
                      <Transform
                          translation='0 9 0'>
                        <Shape
                            castShadow='false'>
                          <Appearance DEF='Green_1'>
                            <Material
                                diffuseColor='0 1 0'/>
                            <ProtoInstance name='ToolShader' USE='_17' containerField='shaders'/>
                          </Appearance>
                          <Cone USE='Arrow_1'/>
                        </Shape>
                      </Transform>
                      <Transform
                          translation='0 6 0'>
                        <Shape
                            castShadow='false'>
                          <Appearance USE='Green_1'/>
                          <Sphere USE='Sphere_1'/>
                        </Shape>
                      </Transform>
                      <Transform
                          translation='0 6 0'>
                        <Shape
                            castShadow='false'>
                          <Appearance USE='Green_1'/>
                          <Box USE='Box_2'/>
                        </Shape>
                      </Transform>
                    </Switch>
                  </ScreenGroup>
                </Transform>
                <TouchSensor USE='ModeTouch'/>
                <PlaneSensor DEF='YTranslationSensor'
                    description='y-Axis'
                    autoOffset='false'
                    maxPosition='0 -1'>
                  <IS>
                    <connect nodeField='isActive' protoField='isActive'/>
                  </IS>
                </PlaneSensor>
                <PlaneSensor DEF='YPlaneSensor'
                    axisRotation='-1 0 0 90'
                    autoOffset='false'>
                  <IS>
                    <connect nodeField='isActive' protoField='isActive'/>
                  </IS>
                </PlaneSensor>
                <PlaneSensor DEF='YScaleFrontSensor'
                    description='y-Axis'
                    autoOffset='false'
                    maxPosition='0 -1'>
                  <IS>
                    <connect nodeField='isActive' protoField='isActive'/>
                  </IS>
                </PlaneSensor>
              </Group>
              <Group DEF='Back_2'>
                <Transform DEF='YBack_1'
                    translation='0 -0.5 0'>
                  <ScreenGroup>
                    <Switch DEF='_24'
                        whichChoice='0'>
                      <Transform DEF='_13'
                          translation='0 -1.5 0'
                          rotation='0 0 -1 1.5707963267949'>
                        <Shape
                            castShadow='false'>
                          <Appearance USE='Green_1'/>
                          <Cylinder USE='Back_1'/>
                        </Shape>
                      </Transform>
                      <Transform USE='_13'/>
                      <Transform
                          translation='0 -1.5 0'
                          rotation='1 0 0 90'>
                        <Shape
                            castShadow='false'>
                          <Appearance USE='Green_1'/>
                          <Box USE='_21'/>
                        </Shape>
                      </Transform>
                    </Switch>
                  </ScreenGroup>
                </Transform>
                <TouchSensor USE='ModeTouch'/>
                <PlaneSensor USE='YTranslationSensor'/>
                <PlaneSensor USE='YPlaneSensor'/>
                <PlaneSensor DEF='YScaleBackSensor'
                    description='y-Axis'
                    autoOffset='false'
                    maxPosition='0 -1'>
                  <IS>
                    <connect nodeField='isActive' protoField='isActive'/>
                  </IS>
                </PlaneSensor>
              </Group>
            </Group>
            <Group DEF='ZHandle'>
              <IS>
                <connect nodeField='visible' protoField='zAxisDisplay'/>
              </IS>
              <Group DEF='Front_2'>
                <Transform DEF='ZFront'
                    translation='0 0 0.5'>
                  <ScreenGroup>
                    <Switch DEF='_23'
                        whichChoice='0'>
                      <Transform
                          translation='0 0 9'
                          rotation='1 0 0 90'>
                        <Shape
                            castShadow='false'>
                          <Appearance DEF='Blue'>
                            <Material
                                diffuseColor='0 0 1'/>
                            <ProtoInstance name='ToolShader' USE='_17' containerField='shaders'/>
                          </Appearance>
                          <Cone USE='Arrow_1'/>
                        </Shape>
                      </Transform>
                      <Transform
                          translation='0 0 6'>
                        <Shape
                            castShadow='false'>
                          <Appearance USE='Blue'/>
                          <Sphere USE='Sphere_1'/>
                        </Shape>
                      </Transform>
                      <Transform
                          translation='0 0 6'>
                        <Shape
                            castShadow='false'>
                          <Appearance USE='Blue'/>
                          <Box USE='Box_2'/>
                        </Shape>
                      </Transform>
                    </Switch>
                  </ScreenGroup>
                </Transform>
                <TouchSensor USE='ModeTouch'/>
                <PlaneSensor DEF='ZTranslationSensor'
                    description='z-Axis'
                    axisRotation='0 -1 0 90'
                    autoOffset='false'
                    maxPosition='-1 0'>
                  <IS>
                    <connect nodeField='isActive' protoField='isActive'/>
                  </IS>
                </PlaneSensor>
                <PlaneSensor DEF='ZPlaneSensor_1'
                    autoOffset='false'>
                  <IS>
                    <connect nodeField='isActive' protoField='isActive'/>
                  </IS>
                </PlaneSensor>
                <PlaneSensor DEF='ZScaleFrontSensor'
                    description='z-Axis'
                    axisRotation='0 -1 0 90'
                    autoOffset='false'
                    maxPosition='-1 0'>
                  <IS>
                    <connect nodeField='isActive' protoField='isActive'/>
                  </IS>
                </PlaneSensor>
              </Group>
              <Group DEF='Back_3'>
                <Transform DEF='ZBack'
                    translation='0 0 -0.5'>
                  <ScreenGroup>
                    <Switch DEF='_22'
                        whichChoice='0'>
                      <Transform DEF='_19'
                          translation='0 0 -1.5'
                          rotation='1 0 0 90'>
                        <Shape
                            castShadow='false'>
                          <Appearance USE='Blue'/>
                          <Cylinder USE='Back_1'/>
                        </Shape>
                      </Transform>
                      <Transform USE='_19'/>
                      <Transform
                          translation='0 0 -1.5'>
                        <Shape
                            castShadow='false'>
                          <Appearance USE='Blue'/>
                          <Box USE='_21'/>
                        </Shape>
                      </Transform>
                    </Switch>
                  </ScreenGroup>
                </Transform>
                <TouchSensor USE='ModeTouch'/>
                <PlaneSensor USE='ZTranslationSensor'/>
                <PlaneSensor USE='ZPlaneSensor_1'/>
                <PlaneSensor DEF='ZScaleBackSensor'
                    description='z-Axis'
                    axisRotation='0 -1 0 90'
                    autoOffset='false'
                    maxPosition='-1 0'>
                  <IS>
                    <connect nodeField='isActive' protoField='isActive'/>
                  </IS>
                </PlaneSensor>
              </Group>
            </Group>
          </Group>
          <Group DEF='Center'>
            <IS>
              <connect nodeField='visible' protoField='centerDisplay'/>
            </IS>
            <Shape DEF='CenterLine'
                castShadow='false'>
              <Appearance>
                <LineProperties
                    linetype='3'
                    linewidthScaleFactor='2'/>
              </Appearance>
              <IndexedLineSet DEF='CenterIndexedLineSet'
                  coordIndex='0, 1, -1'>
                <Color
                    color='1 1 0, 1 1 0'/>
                <Coordinate DEF='CenterLineCoord'
                    point='0 0 0, 0 0 0'/>
              </IndexedLineSet>
            </Shape>
            <Transform>
              <IS>
                <connect nodeField='translation' protoField='center'/>
              </IS>
              <ScreenGroup DEF='CenterPoint'>
                <Shape
                    castShadow='false'>
                  <Appearance>
                    <Material
                        diffuseColor='1 1 0'/>
                    <ProtoInstance name='ToolShader' USE='_17' containerField='shaders'/>
                  </Appearance>
                  <Sphere
                      radius='5'/>
                </Shape>
              </ScreenGroup>
            </Transform>
          </Group>
        </Collision>
        <Script DEF='BBoxScript'
            directOutput='true'>
          <field accessType='inputOutput' type='SFVec3f' name='bboxSize'/>
          <field accessType='initializeOnly' type='SFNode' name='bbox'>
            <Coordinate USE='BBox'/>
          </field>
          <field accessType='initializeOnly' type='SFNode' name='axes'>
            <Coordinate USE='AxesCoord'/>
          </field>
          <IS>
            <connect nodeField='bboxSize' protoField='bboxSize'/>
          </IS>
<![CDATA[ecmascript:

function initialize ()
{
   eventsProcessed ();
}

function eventsProcessed ()
{
   const bboxSize1_2 = bboxSize .divide (2);

   // Axes

   axes .point = new MFVec3f (new SFVec3f (-bboxSize1_2 .x, 0, 0),
                              new SFVec3f ( bboxSize1_2 .x, 0, 0),
                              new SFVec3f (0, -bboxSize1_2 .y, 0),
                              new SFVec3f (0,  bboxSize1_2 .y, 0),
                              new SFVec3f (0, 0, -bboxSize1_2 .z),
                              new SFVec3f (0, 0,  bboxSize1_2 .z));


   // BBox

   bbox .point = new MFVec3f (new SFVec3f (-bboxSize1_2 .x,  bboxSize1_2 .y,  bboxSize1_2 .z),
                              new SFVec3f (-bboxSize1_2 .x, -bboxSize1_2 .y,  bboxSize1_2 .z),
                              new SFVec3f ( bboxSize1_2 .x, -bboxSize1_2 .y,  bboxSize1_2 .z),
                              new SFVec3f ( bboxSize1_2 .x,  bboxSize1_2 .y,  bboxSize1_2 .z),
                              new SFVec3f (-bboxSize1_2 .x,  bboxSize1_2 .y, -bboxSize1_2 .z),
                              new SFVec3f (-bboxSize1_2 .x, -bboxSize1_2 .y, -bboxSize1_2 .z),
                              new SFVec3f ( bboxSize1_2 .x, -bboxSize1_2 .y, -bboxSize1_2 .z),
                              new SFVec3f ( bboxSize1_2 .x,  bboxSize1_2 .y, -bboxSize1_2 .z));
}
]]>
        </Script>
        <Script DEF='HandesScript'
            directOutput='true'>
          <field accessType='inputOutput' type='SFVec3f' name='bboxSize'/>
          <field accessType='initializeOnly' type='SFNode' name='xFront'>
            <Transform USE='XFront'/>
          </field>
          <field accessType='initializeOnly' type='SFNode' name='yFront'>
            <Transform USE='YFront'/>
          </field>
          <field accessType='initializeOnly' type='SFNode' name='zFront'>
            <Transform USE='ZFront'/>
          </field>
          <field accessType='initializeOnly' type='SFNode' name='xBack'>
            <Transform USE='XBack_1'/>
          </field>
          <field accessType='initializeOnly' type='SFNode' name='yBack'>
            <Transform USE='YBack_1'/>
          </field>
          <field accessType='initializeOnly' type='SFNode' name='zBack'>
            <Transform USE='ZBack'/>
          </field>
          <IS>
            <connect nodeField='bboxSize' protoField='bboxSize'/>
          </IS>
<![CDATA[ecmascript:

function initialize ()
{
   eventsProcessed ();
}

function eventsProcessed ()
{
   // Position the arrows.

   const bboxSize1_2 = bboxSize .divide (2);

   xFront .translation = new SFVec3f (bboxSize1_2 .x, 0, 0);
   yFront .translation = new SFVec3f (0, bboxSize1_2 .y, 0);
   zFront .translation = new SFVec3f (0, 0, bboxSize1_2 .z);

   xBack .translation = new SFVec3f (-bboxSize1_2 .x, 0, 0);
   yBack .translation = new SFVec3f (0, -bboxSize1_2 .y, 0);
   zBack .translation = new SFVec3f (0, 0, -bboxSize1_2 .z);
}
]]>
        </Script>
        <Script DEF='CenterScript'
            directOutput='true'>
          <field accessType='inputOutput' type='SFVec3f' name='center'/>
          <field accessType='inputOutput' type='SFVec3f' name='bboxSize'/>
          <field accessType='inputOutput' type='SFVec3f' name='bboxCenter'/>
          <field accessType='initializeOnly' type='SFNode' name='coord'>
            <Coordinate USE='CenterLineCoord'/>
          </field>
          <IS>
            <connect nodeField='center' protoField='center'/>
            <connect nodeField='bboxSize' protoField='bboxSize'/>
            <connect nodeField='bboxCenter' protoField='bboxCenter'/>
          </IS>
<![CDATA[ecmascript:

function initialize ()
{
   eventsProcessed ();
}

function eventsProcessed ()
{
   coord .point [0] = center;
   coord .point [1] = bboxCenter;
}
]]>
        </Script>
        <Script DEF='ModeScript'>
          <field accessType='inputOnly' type='SFTime' name='set_time'/>
          <field accessType='inputOutput' type='MFString' name='tools'/>
          <field accessType='inputOutput' type='SFString' name='translateMode'/>
          <field accessType='inputOutput' type='SFBool' name='scaleXAxis'/>
          <field accessType='inputOutput' type='SFBool' name='scaleYAxis'/>
          <field accessType='inputOutput' type='SFBool' name='scaleZAxis'/>
          <field accessType='inputOutput' type='SFBool' name='scaleUniform'/>
          <field accessType='inputOutput' type='SFVec3f' name='bboxSize'/>
          <field accessType='outputOnly' type='SFBool' name='translateAxes'/>
          <field accessType='outputOnly' type='SFBool' name='translatePlanes'/>
          <field accessType='outputOnly' type='SFBool' name='rotate'/>
          <field accessType='outputOnly' type='SFBool' name='scaleX'/>
          <field accessType='outputOnly' type='SFBool' name='scaleY'/>
          <field accessType='outputOnly' type='SFBool' name='scaleZ'/>
          <field accessType='outputOnly' type='SFBool' name='scale'/>
          <field accessType='outputOnly' type='SFInt32' name='activeTool'/>
          <field accessType='initializeOnly' type='SFTime' name='time'/>
          <IS>
            <connect nodeField='tools' protoField='tools'/>
            <connect nodeField='translateMode' protoField='translateMode'/>
            <connect nodeField='scaleXAxis' protoField='scaleXAxis'/>
            <connect nodeField='scaleYAxis' protoField='scaleYAxis'/>
            <connect nodeField='scaleZAxis' protoField='scaleZAxis'/>
            <connect nodeField='scaleUniform' protoField='scaleUniform'/>
            <connect nodeField='bboxSize' protoField='bboxSize'/>
            <connect nodeField='activeTool' protoField='activeTool'/>
          </IS>
<![CDATA[ecmascript:

function initialize ()
{
   set_tool (0);
}

function set_tools ()
{
   set_tool (0);
}

function set_translateMode ()
{
   set_tool (activeTool);
}

function set_time (value)
{
   if (value - time < 0.4)
   {
      time = 0;

      if (bboxSize .length ())
         set_tool ((activeTool + 1) % tools .length);
      else
         set_tool (0);
   }
   else
   {
      time = value;
   }
}

function set_tool (value)
{
   translateAxes   = false;
   translatePlanes = false;
   rotate          = false;
   scaleX          = false;
   scaleY          = false;
   scaleZ          = false;
   scale           = false;

   switch (tools [value])
   {
      case "TRANSLATE":
      {
         translateAxes   = translateMode === "TRANSLATE_AXES";
         translatePlanes = translateMode === "TRANSLATE_PLANES";
         activeTool      = 0;
         break;
      }
      case "ROTATE":
      {
         rotate     = true;
         activeTool = 1;
         break;
      }
      case "SCALE":
      {
         scaleX     = scaleXAxis;
         scaleY     = scaleYAxis;
         scaleZ     = scaleZAxis;
         scale      = scaleUniform;
         activeTool = 2;
         break;
      }
  }
}
]]>
        </Script>
        <Script DEF='TranslateScript'
            directOutput='true'>
          <field accessType='inputOnly' type='SFBool' name='set_active'/>
          <field accessType='inputOnly' type='SFVec3f' name='set_xTranslation'/>
          <field accessType='inputOnly' type='SFVec3f' name='set_yTranslation'/>
          <field accessType='inputOnly' type='SFVec3f' name='set_zTranslation'/>
          <field accessType='inputOnly' type='SFVec3f' name='set_xPlaneTranslation'/>
          <field accessType='inputOnly' type='SFVec3f' name='set_yPlaneTranslation'/>
          <field accessType='inputOnly' type='SFVec3f' name='set_zPlaneTranslation'/>
          <field accessType='inputOutput' type='SFVec3f' name='translation'/>
          <field accessType='inputOutput' type='SFRotation' name='rotation'/>
          <field accessType='inputOutput' type='SFVec3f' name='scale'/>
          <field accessType='inputOutput' type='SFRotation' name='scaleOrientation'/>
          <field accessType='inputOutput' type='SFVec3f' name='center'/>
          <field accessType='inputOutput' type='SFBool' name='keepCenter'/>
          <field accessType='initializeOnly' type='SFVec3f' name='initialTranslation'/>
          <field accessType='initializeOnly' type='SFVec3f' name='initialCenter'/>
          <field accessType='initializeOnly' type='SFInt32' name='events'/>
          <IS>
            <connect nodeField='translation' protoField='translation'/>
            <connect nodeField='rotation' protoField='rotation'/>
            <connect nodeField='scale' protoField='scale'/>
            <connect nodeField='scaleOrientation' protoField='scaleOrientation'/>
            <connect nodeField='center' protoField='center'/>
          </IS>
<![CDATA[ecmascript:

function set_active (value)
{
   if (!value)
      return;

   initialTranslation = translation;
   initialCenter      = center;

   events = 4;
}

function set_xTranslation (value)
{
   translate (new SFVec3f (value .x, 0, 0));
}

function set_yTranslation (value)
{
   translate (new SFVec3f (0, value .y, 0));
}

function set_zTranslation (value)
{
   translate (new SFVec3f (0, 0, value .z));
}

function set_xPlaneTranslation (value)
{
   translate (new SFVec3f (0, value .y, value .z));
}

function set_yPlaneTranslation (value)
{
   translate (new SFVec3f (value .x, 0, value .z));
}

function set_zPlaneTranslation (value)
{
   translate (new SFVec3f (value .x, value .y, 0));
}

function translate (value)
{
   // Prevent accidentially move.
   if (events)
   {
      -- events;
      return;
   }

   if (keepCenter)
   {
      translation = initialTranslation .add (value);
      center      = initialCenter .subtract (value);
   }
   else
   {
      const matrix = new SFMatrix4f ();

      matrix .setTransform (translation,
                            rotation,
                            scale,
                            scaleOrientation,
                            center);

      const offset = matrix .multDirMatrix (value);

      translation = initialTranslation .add (offset);
   }
}
]]>
        </Script>
        <Script DEF='ScaleScript'>
          <field accessType='inputOnly' type='SFBool' name='set_active'/>
          <field accessType='inputOnly' type='SFVec3f' name='set_xScaleFront'/>
          <field accessType='inputOnly' type='SFVec3f' name='set_yScaleFront'/>
          <field accessType='inputOnly' type='SFVec3f' name='set_zScaleFront'/>
          <field accessType='inputOnly' type='SFVec3f' name='set_xScaleBack'/>
          <field accessType='inputOnly' type='SFVec3f' name='set_yScaleBack'/>
          <field accessType='inputOnly' type='SFVec3f' name='set_zScaleBack'/>
          <field accessType='inputOutput' type='SFVec3f' name='translation'/>
          <field accessType='inputOutput' type='SFRotation' name='rotation'/>
          <field accessType='inputOutput' type='SFVec3f' name='scale'/>
          <field accessType='inputOutput' type='SFRotation' name='scaleOrientation'/>
          <field accessType='inputOutput' type='SFVec3f' name='center'/>
          <field accessType='inputOutput' type='SFVec3f' name='bboxSize'/>
          <field accessType='inputOutput' type='SFVec3f' name='bboxCenter'/>
          <field accessType='inputOutput' type='SFString' name='scaleMode'/>
          <field accessType='inputOutput' type='MFString' name='connectedAxes'/>
          <field accessType='inputOutput' type='SFBool' name='keepCenter'/>
          <field accessType='initializeOnly' type='SFVec3f' name='initalTranslation'/>
          <field accessType='initializeOnly' type='SFVec3f' name='initialScale'/>
          <field accessType='initializeOnly' type='SFVec3f' name='initialCenter'/>
          <field accessType='initializeOnly' type='SFMatrix4f' name='initialMatrix'/>
          <field accessType='initializeOnly' type='SFVec3f' name='distanceFromCenter'/>
          <field accessType='initializeOnly' type='SFInt32' name='events'/>
          <IS>
            <connect nodeField='translation' protoField='translation'/>
            <connect nodeField='rotation' protoField='rotation'/>
            <connect nodeField='scale' protoField='scale'/>
            <connect nodeField='scaleOrientation' protoField='scaleOrientation'/>
            <connect nodeField='center' protoField='center'/>
            <connect nodeField='bboxSize' protoField='bboxSize'/>
            <connect nodeField='bboxCenter' protoField='bboxCenter'/>
            <connect nodeField='scaleMode' protoField='scaleMode'/>
            <connect nodeField='connectedAxes' protoField='connectedAxes'/>
          </IS>
<![CDATA[ecmascript:

function set_active (value)
{
   if (!value)
      return;

   initalTranslation = translation;
   initialScale      = scale;
   initialCenter     = center;

   initialMatrix .setTransform (translation,
                                rotation,
                                scale,
                                scaleOrientation,
                                center);

   distanceFromCenter = bboxCenter .subtract (center);

   events = 4;
}

function set_xScaleFront (value)
{
   if (bboxSize .x)
      set_scaleAxis ("x", value, 1);
}

function set_yScaleFront (value)
{
   if (bboxSize .y)
      set_scaleAxis ("y", value, 1);
}

function set_zScaleFront (value)
{
   if (bboxSize .z)
      set_scaleAxis ("z", value, 1);
}

function set_xScaleBack (value)
{             
   if (bboxSize .x)
      set_scaleAxis ("x", value, -1);
}

function set_yScaleBack (value)
{
   if (bboxSize .y)
      set_scaleAxis ("y", value, -1);
}

function set_zScaleBack (value)
{
   if (bboxSize .z)
      set_scaleAxis ("z", value, -1);
}

function set_scaleAxis (axis, value, sgn)
{
   value = value [axis];

   switch (scaleMode)
   {
      case "SCALE_FROM_EDGE":
      {
         const
            vector = new SFVec3f (1, 1, 1),
            offset = new SFVec3f ();
      
         vector [axis] = 1 + sgn * value / bboxSize [axis];
         offset [axis] = -sgn * bboxSize [axis] / 2;

         connectAxis (axis, vector, offset);

         scaleTransform (vector, offset);
         break;
      }
      case "SCALE_FROM_CENTER":
      {
         const
            vector = new SFVec3f (1, 1, 1),
            offset = new SFVec3f ();
      
         vector [axis] = 1 + 2 * sgn * value / bboxSize [axis];

         connectAxis (axis, vector, offset);

         scaleTransform (vector, offset);
         break;
      }
   }
}

function connectAxis (axis, vector, offset)
{
   for (const connectedAxis of connectedAxes)
   {
      const
         lhs = connectedAxis [0] .toLowerCase (),
         rhs = connectedAxis [1] .toLowerCase ();
   
      if (rhs == axis)
      {
         vector [lhs] = vector [rhs];
         offset [lhs] = offset [rhs];
      }
   }
}

function scaleTransform (value, centerOffset)
{
   if (events)
   {
      // Prevent accidentially move.
      -- events;
      return;
   }

   const scaleMatrix = new SFMatrix4f ();
   scaleMatrix .setTransform (new SFVec3f (), new SFRotation (), value);

   const
      scaledMatrix = initialMatrix .multLeft (scaleMatrix),
      t            = new SFVec3f (),
      r            = new SFRotation (),
      s            = new SFVec3f (),
      so           = new SFRotation ();

   scaledMatrix .getTransform (t, r, s, so, center);

   if (s .x && s .y && s .z)
   {
      translation      = t;
      rotation         = r;
      scale            = s;
      scaleOrientation = so;

      if (keepCenter)
         translateKeepCenter (scaledMatrix, distanceFromCenter .add (centerOffset));
      else
         translate (scaledMatrix, distanceFromCenter .add (centerOffset));
   }
}

function translateKeepCenter (scaledMatrix, distanceFromCenter)
{
   const centerOffset = scaledMatrix .inverse () .multDirMatrix (scaledMatrix .multDirMatrix (distanceFromCenter) .subtract (initialMatrix .multDirMatrix (distanceFromCenter)));

   translation = initalTranslation .subtract (centerOffset);
   center      = initalCenter .add (centerOffset);
}

function translate (scaledMatrix, distanceFromCenter)
{
   const centerOffset = scaledMatrix .multDirMatrix (distanceFromCenter) .subtract (initialMatrix .multDirMatrix (distanceFromCenter));

   translation = initalTranslation .subtract (centerOffset);
}
]]>
        </Script>
        <ROUTE fromNode='XTranslationSensor' fromField='translation_changed' toNode='TranslateScript' toField='set_xTranslation'/>
        <ROUTE fromNode='YTranslationSensor' fromField='translation_changed' toNode='TranslateScript' toField='set_yTranslation'/>
        <ROUTE fromNode='ZTranslationSensor' fromField='translation_changed' toNode='TranslateScript' toField='set_zTranslation'/>
        <ROUTE fromNode='ZTranslationSensor' fromField='isActive' toNode='TranslateScript' toField='set_active'/>
        <ROUTE fromNode='YTranslationSensor' fromField='isActive' toNode='TranslateScript' toField='set_active'/>
        <ROUTE fromNode='XTranslationSensor' fromField='isActive' toNode='TranslateScript' toField='set_active'/>
        <ROUTE fromNode='ModeTouch' fromField='touchTime' toNode='ModeScript' toField='set_time'/>
        <ROUTE fromNode='ModeScript' fromField='activeTool' toNode='_22' toField='set_whichChoice'/>
        <ROUTE fromNode='ModeScript' fromField='activeTool' toNode='_23' toField='set_whichChoice'/>
        <ROUTE fromNode='ModeScript' fromField='activeTool' toNode='_24' toField='set_whichChoice'/>
        <ROUTE fromNode='ModeScript' fromField='activeTool' toNode='_25' toField='set_whichChoice'/>
        <ROUTE fromNode='ModeScript' fromField='activeTool' toNode='_26' toField='set_whichChoice'/>
        <ROUTE fromNode='ModeScript' fromField='activeTool' toNode='_27' toField='set_whichChoice'/>
        <ROUTE fromNode='ModeScript' fromField='translateAxes' toNode='ZTranslationSensor' toField='set_enabled'/>
        <ROUTE fromNode='ModeScript' fromField='translateAxes' toNode='YTranslationSensor' toField='set_enabled'/>
        <ROUTE fromNode='ModeScript' fromField='translateAxes' toNode='XTranslationSensor' toField='set_enabled'/>
        <ROUTE fromNode='ModeScript' fromField='scaleZ' toNode='ZScaleBackSensor' toField='set_enabled'/>
        <ROUTE fromNode='ModeScript' fromField='scaleZ' toNode='ZScaleFrontSensor' toField='set_enabled'/>
        <ROUTE fromNode='ModeScript' fromField='scaleY' toNode='YScaleBackSensor' toField='set_enabled'/>
        <ROUTE fromNode='ModeScript' fromField='scaleY' toNode='YScaleFrontSensor' toField='set_enabled'/>
        <ROUTE fromNode='ModeScript' fromField='scaleX' toNode='XScaleBackSensor' toField='set_enabled'/>
        <ROUTE fromNode='ModeScript' fromField='scaleX' toNode='XScaleFrontSensor' toField='set_enabled'/>
        <ROUTE fromNode='ZScaleBackSensor' fromField='isActive' toNode='ScaleScript' toField='set_active'/>
        <ROUTE fromNode='ZScaleFrontSensor' fromField='isActive' toNode='ScaleScript' toField='set_active'/>
        <ROUTE fromNode='YScaleBackSensor' fromField='isActive' toNode='ScaleScript' toField='set_active'/>
        <ROUTE fromNode='YScaleFrontSensor' fromField='isActive' toNode='ScaleScript' toField='set_active'/>
        <ROUTE fromNode='XScaleBackSensor' fromField='isActive' toNode='ScaleScript' toField='set_active'/>
        <ROUTE fromNode='XScaleFrontSensor' fromField='isActive' toNode='ScaleScript' toField='set_active'/>
        <ROUTE fromNode='XScaleFrontSensor' fromField='translation_changed' toNode='ScaleScript' toField='set_xScaleFront'/>
        <ROUTE fromNode='YScaleFrontSensor' fromField='translation_changed' toNode='ScaleScript' toField='set_yScaleFront'/>
        <ROUTE fromNode='ZScaleFrontSensor' fromField='translation_changed' toNode='ScaleScript' toField='set_zScaleFront'/>
        <ROUTE fromNode='XScaleBackSensor' fromField='translation_changed' toNode='ScaleScript' toField='set_xScaleBack'/>
        <ROUTE fromNode='YScaleBackSensor' fromField='translation_changed' toNode='ScaleScript' toField='set_yScaleBack'/>
        <ROUTE fromNode='ZScaleBackSensor' fromField='translation_changed' toNode='ScaleScript' toField='set_zScaleBack'/>
        <ROUTE fromNode='ModeScript' fromField='translatePlanes' toNode='ZPlaneSensor_1' toField='set_enabled'/>
        <ROUTE fromNode='ZPlaneSensor_1' fromField='translation_changed' toNode='TranslateScript' toField='set_zPlaneTranslation'/>
        <ROUTE fromNode='ModeScript' fromField='translatePlanes' toNode='YPlaneSensor' toField='set_enabled'/>
        <ROUTE fromNode='ModeScript' fromField='translatePlanes' toNode='XPlaneSensor_1' toField='set_enabled'/>
        <ROUTE fromNode='XPlaneSensor_1' fromField='translation_changed' toNode='TranslateScript' toField='set_xPlaneTranslation'/>
        <ROUTE fromNode='YPlaneSensor' fromField='translation_changed' toNode='TranslateScript' toField='set_yPlaneTranslation'/>
        <ROUTE fromNode='YPlaneSensor' fromField='isActive' toNode='TranslateScript' toField='set_active'/>
        <ROUTE fromNode='ZPlaneSensor_1' fromField='isActive' toNode='TranslateScript' toField='set_active'/>
        <ROUTE fromNode='XPlaneSensor_1' fromField='isActive' toNode='TranslateScript' toField='set_active'/>
      </ProtoBody>
    </ProtoDeclare>
    <ProtoInstance name='Tool'>
      <fieldValue name='bboxDisplay' value='true'/>
      <fieldValue name='bboxSize' value='2 3 4'/>
    </ProtoInstance>
  </Scene>
</X3D>
